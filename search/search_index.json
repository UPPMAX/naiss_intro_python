{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Welcome to the NAISS Intro to Python for HPC course","text":"<p>Great course. Now, Python is not scary anymore.</p> <p>A learner from this course (source)</p> <p>This course introduces the foundations of the Python programming language on the NAISS HPC clusters.</p> <p>Prerequisites Learning outcomes Course dates Schedule Getting it to run Basic Python</p>"},{"location":"CODE_OF_CONDUCT/","title":"Contributor Covenant Code of Conduct","text":""},{"location":"CODE_OF_CONDUCT/#our-pledge","title":"Our Pledge","text":"<p>We as members, contributors, and leaders pledge to make participation in our community a harassment-free experience for everyone, regardless of age, body size, visible or invisible disability, ethnicity, sex characteristics, gender identity and expression, level of experience, education, socio-economic status, nationality, personal appearance, race, religion, or sexual identity and orientation.</p> <p>We pledge to act and interact in ways that contribute to an open, welcoming, diverse, inclusive, and healthy community.</p>"},{"location":"CODE_OF_CONDUCT/#our-standards","title":"Our Standards","text":"<p>Examples of behavior that contributes to a positive environment for our community include:</p> <ul> <li>Demonstrating empathy and kindness toward other people</li> <li>Being respectful of differing opinions, viewpoints, and experiences</li> <li>Giving and gracefully accepting constructive feedback</li> <li>Accepting responsibility and apologizing to those affected by our mistakes,   and learning from the experience</li> <li>Focusing on what is best not just for us as individuals, but for the   overall community</li> </ul> <p>Examples of unacceptable behavior include:</p> <ul> <li>The use of sexualized language or imagery, and sexual attention or   advances of any kind</li> <li>Trolling, insulting or derogatory comments, and personal or political attacks</li> <li>Public or private harassment</li> <li>Publishing others' private information, such as a physical or email   address, without their explicit permission</li> <li>Other conduct which could reasonably be considered inappropriate in a   professional setting</li> </ul>"},{"location":"CODE_OF_CONDUCT/#enforcement-responsibilities","title":"Enforcement Responsibilities","text":"<p>Community leaders are responsible for clarifying and enforcing our standards of acceptable behavior and will take appropriate and fair corrective action in response to any behavior that they deem inappropriate, threatening, offensive, or harmful.</p> <p>Community leaders have the right and responsibility to remove, edit, or reject comments, commits, code, wiki edits, issues, and other contributions that are not aligned to this Code of Conduct, and will communicate reasons for moderation decisions when appropriate.</p>"},{"location":"CODE_OF_CONDUCT/#scope","title":"Scope","text":"<p>This Code of Conduct applies within all community spaces, and also applies when an individual is officially representing the community in public spaces. Examples of representing our community include using an official e-mail address, posting via an official social media account, or acting as an appointed representative at an online or offline event.</p>"},{"location":"CODE_OF_CONDUCT/#enforcement","title":"Enforcement","text":"<p>Instances of abusive, harassing, or otherwise unacceptable behavior may be reported to the community leaders responsible for enforcement at marcus.lundberg@uppmax.uu.se. All complaints will be reviewed and investigated promptly and fairly.</p> <p>All community leaders are obligated to respect the privacy and security of the reporter of any incident.</p>"},{"location":"CODE_OF_CONDUCT/#enforcement-guidelines","title":"Enforcement Guidelines","text":"<p>Community leaders will follow these Community Impact Guidelines in determining the consequences for any action they deem in violation of this Code of Conduct:</p>"},{"location":"CODE_OF_CONDUCT/#1-correction","title":"1. Correction","text":"<p>Community Impact: Use of inappropriate language or other behavior deemed unprofessional or unwelcome in the community.</p> <p>Consequence: A private, written warning from community leaders, providing clarity around the nature of the violation and an explanation of why the behavior was inappropriate. A public apology may be requested.</p>"},{"location":"CODE_OF_CONDUCT/#2-warning","title":"2. Warning","text":"<p>Community Impact: A violation through a single incident or series of actions.</p> <p>Consequence: A warning with consequences for continued behavior. No interaction with the people involved, including unsolicited interaction with those enforcing the Code of Conduct, for a specified period of time. This includes avoiding interactions in community spaces as well as external channels like social media. Violating these terms may lead to a temporary or permanent ban.</p>"},{"location":"CODE_OF_CONDUCT/#3-temporary-ban","title":"3. Temporary Ban","text":"<p>Community Impact: A serious violation of community standards, including sustained inappropriate behavior.</p> <p>Consequence: A temporary ban from any sort of interaction or public communication with the community for a specified period of time. No public or private interaction with the people involved, including unsolicited interaction with those enforcing the Code of Conduct, is allowed during this period. Violating these terms may lead to a permanent ban.</p>"},{"location":"CODE_OF_CONDUCT/#4-permanent-ban","title":"4. Permanent Ban","text":"<p>Community Impact: Demonstrating a pattern of violation of community standards, including sustained inappropriate behavior,  harassment of an individual, or aggression toward or disparagement of classes of individuals.</p> <p>Consequence: A permanent ban from any sort of public interaction within the community.</p>"},{"location":"CODE_OF_CONDUCT/#attribution","title":"Attribution","text":"<p>This Code of Conduct is adapted from the Contributor Covenant, version 2.0, available at https://www.contributor-covenant.org/version/2/0/code_of_conduct.html.</p> <p>Community Impact Guidelines were inspired by Mozilla's code of conduct enforcement ladder.</p> <p>For answers to common questions about this code of conduct, see the FAQ at https://www.contributor-covenant.org/faq. Translations are available at https://www.contributor-covenant.org/translations.</p>"},{"location":"CONTRIBUTING/","title":"Contributing","text":"<p>Thanks for considering to contribute and reading this!</p> <p>Here we discuss how to contribute</p> <ul> <li>Spoken text, e.g. ideas, feedback, messages, etc.   and are written in English.</li> <li>Code, e.g. textual changes where the text is formatted in Markdown</li> </ul>"},{"location":"CONTRIBUTING/#spoken-text","title":"Spoken text","text":"<p>Spoken text are ideas, feedback, messages, etc. and are written in English.</p> <p>For ideas or feedback, create an Issue. These Issues will be discussed in a meeting and/or below that Issue.</p> <p>Ideas that improve the experience of our learners will likely be accepted.</p>"},{"location":"CONTRIBUTING/#code","title":"Code","text":"<p>We welcome any contribution that:</p> <ul> <li>improves the experience of our learners</li> <li>follow all standards set by the continuous integration tools   (e.g. use 4 spaces for indentation)</li> </ul> <p>As an UPPMAX contributor, one can contribute by:</p> <ol> <li>Clone this repository</li> <li>Add a branch</li> <li>Work on your branch</li> <li>When done, create a Pull Request from your branch to <code>main</code></li> <li>If the change is accepted after review it will be merged into the main branch</li> <li>Your branch will be deleted after merging</li> </ol> <p>As an external contributor, one can contribute by:</p> <ol> <li>Fork this repository</li> <li>Modify your Fork</li> <li>When done, creating a Pull Request from your Fork to this repository,    merging to the <code>main</code> branch is fine :-)</li> <li>If the change is accepted after review it will be merged into the main branch</li> </ol>"},{"location":"acknowledgements/","title":"Acknowledgements","text":"<p>These are people that helped make this site better, in alphabetic order of first name:</p> <ul> <li>Aleksandra Krusper</li> <li>Elin Berntsson</li> </ul>","tags":["acknowledgements","credits"]},{"location":"contact_us/","title":"Contact us","text":"<p>Sometimes there is a question missing at the Frequently Asked Questions section, sometimes there are other things.</p> <p>You can contact us:</p> Contact method Features Create an issue Best for asking a question publicly, requires a GitHub account Create a pull request Best for improving the course content, requires a GitHub account Send an email Best for asking a question privately, invisible to others <p>When sending an email, these are the roles:</p> Role Person Course coordinator of 1 day course Rich\u00e8l Bilderbeek Course coordinator of 4 day course Birgitte Bryds\u00f6 Main teacher of this day Rich\u00e8l Bilderbeek","tags":["contact","email","talk","find","speak","meet"]},{"location":"course_dates/","title":"Course dates","text":"Where is the schedule? <p>It is at Schedule :-)</p> For teachers <ul> <li>Shared document for teaching dates</li> </ul> Week Date Times Registration closes Remarks 48 Thursday November 27th 2025 9:00-16:00 TBA As part of the 4-day NAISS HPC Python course ?10 Around 2026-03-04 9:00-16:00 TBA . ?17 Around 2026-04-24 9:00-16:00 TBA As part of the 4-day NAISS HPC Python course ?42 Around 2026-10-14 9:00-16:00 TBA . ?48 Around 2026-11-24 9:00-16:00 TBA As part of the 4-day NAISS HPC Python course","tags":["dates","days","calendar"]},{"location":"deploy_locally/","title":"Deploy this repository as a local website","text":"<p>This page describes how to deploy this website locally.</p> <p>To work on the website locally first create a virtual environment and install the required dependencies:</p> Do I really need a virtual environment? <p>No.</p> <pre><code>python -m venv intro_python_venv\nsource intro_python_venv/bin/activate\npip install -r requirements.txt\n</code></pre> <p>Then serve the website and edit</p> <pre><code>mkdocs serve\n</code></pre>"},{"location":"evaluation/","title":"Evaluation","text":"<p>This is the page for evaluating the current iteration of the course.</p> Where can I find the results of earlier evaluations? <p>At the 'Evaluations' page.</p>","tags":["evaluation"]},{"location":"evaluation/#evaluation-forms","title":"Evaluation forms","text":"<ul> <li>Form for any feedback during the day</li> </ul> For teachers: what is in that form? <p>Thanks for your feedback. This feedback will be published as-is at the end of the day, if and only if there are no personal details (email, address, etc.) in the feedback. Do mention the teachers, assistants, etc by name!</p> <ul> <li>Form with evaluation questions</li> </ul> For teachers: what is in that form? <p>These are the evaluation questions. The goals of these questions is to find out how successful the course is in achieving its teaching goals.</p> <p>Give you confidence levels of the following statements, using this scale:</p> <ul> <li>0: I don't know even what this is about ...?</li> <li>1: I have no confidence I can do this</li> <li>2: I have low confidence I can do this</li> <li>3: I have some confidence I can do this</li> <li>4: I have good confidence I can do this</li> <li>5: I absolutely can do this!</li> </ul> <p>Give you confidence levels of the following statements below:</p> <ul> <li>I am comfortable using the documentation of my HPC center</li> <li>I am comfortable using a Python book</li> <li>I am comfortable learning Python</li> <li>I can load a Python version on my HPC cluster</li> <li>I can describe what the Python interpreter is</li> <li>I can use a text editor on my HPC cluster</li> <li>I can create a Python script</li> <li>I can run a Python script</li> <li>In Python, I can create a variable</li> <li>In Python, I can use a variable</li> <li>I can convert a simple equation to Python code</li> <li>In Python, I can find and use the operator for exponentiation</li> <li>In Python, I know what the modulo operator is and when to use it</li> <li>I can convert a simple text question to Python code</li> </ul> <p>Any other feedback?</p> <pre><code>[Empty paragraph]\n</code></pre> <p>Thanks for your feedback!</p> <p>This feedback will be published as-is at the end of the day, if and only if there are no personal details (email, address, etc.) in the feedback. Do mention the teachers, assistants, etc by name!</p>","tags":["evaluation"]},{"location":"faq/","title":"Frequently Asked Questions","text":"","tags":["FAQ","frequently asked questions","questions"]},{"location":"faq/#when-to-follow-the-course","title":"When to follow the course","text":"","tags":["FAQ","frequently asked questions","questions"]},{"location":"faq/#when-should-i-follow-this-course","title":"When should I follow this course?","text":"<p>Tip</p> <p>Great course. Now, Python is not scary anymore.</p> <p>A learner from this course (source)</p> <p>When you want to get started with Python.</p> <p>Especially at the start of any new programming language, having help is very useful: some error messages seem like complex, yet have simple solutions. A teacher helps you get past those first errors.</p>","tags":["FAQ","frequently asked questions","questions"]},{"location":"faq/#when-should-i-consider-to-not-follow-this-course","title":"When should I consider to not follow this course?","text":"<p>These are the reasons to consider to not follow this course:</p>","tags":["FAQ","frequently asked questions","questions"]},{"location":"faq/#reason-1-you-want-to-learn-advanced-things","title":"Reason 1: you want to learn advanced things","text":"<p>Tip</p> <p>I feel like maybe some things were a little basic for me and I wish we had gotten into the more advanced stuff at the end. But this really reinforced the basics for me and I'm still glad that I did it.</p> <p>A learner from this course (source)</p> <p>When you have written your first scripts in Python and expect to learn new and more advanced things.</p> <p>In this case, the course will go too slow for you.</p> <p>However, you will probably be put to work by the teachers to help out other learners. If you like to test your own knowledge by teaching others, you will likely thrive in the course.</p>","tags":["FAQ","frequently asked questions","questions"]},{"location":"faq/#reason-2-you-have-social-anxiety","title":"Reason 2: you have social anxiety","text":"<p>When you have social anxiety.</p> <p>In this case, the course will be too social for you.</p> <p>However, in this course, it is perfectly OK to give a wrong answer or to say 'I do not know'. This is what a former learner had to say on this:</p> <p>Tip</p> <p>As a learner, you do not want to be berated when giving an answer. Richel tries to gently deal with a wrong answer and he does this great</p> <p>A learner from this course (source)</p> <p>You are welcome to try and leave anytime you want. The course material is made for self-study too, with videos for all exercises. Do fill in the evaluation when you leave early :-)</p>","tags":["FAQ","frequently asked questions","questions"]},{"location":"faq/#prerequisites","title":"Prerequisites","text":"","tags":["FAQ","frequently asked questions","questions"]},{"location":"faq/#what-are-the-prerequisites-for-following-this-course","title":"What are the prerequisites for following this course?","text":"<p>See prerequisites.</p>","tags":["FAQ","frequently asked questions","questions"]},{"location":"faq/#how-can-i-check-if-i-have-registered","title":"How can I check if I have registered?","text":"<p>This course is used in multiple contexts:</p> <ul> <li>When this course is part of   the HPC Python course,   you'll get an email within a couple of days</li> <li>When this course is stand-alone,   see the procedure below</li> </ul> Prefer a video? <p>You can see this question being answered in this YouTube video.</p> <ul> <li>Go to the course data page</li> <li>Go to the data of your course instance</li> <li>View the registrations table. If the MD5 hash of your email address   is in that table, you are registered.</li> </ul> Why use an MD5 hash? <p>As a trade-off between privacy and pragmatism.</p> <ul> <li>Privacy: do not publish email addresses, however, oneone can find out   if an email address is registered</li> <li>Pragmatism: a learner should be able to confirm he/she has been registered</li> </ul> How to use an MD5? <p>Get the MD5 hash of your email address. For example, using this website. the email <code>john.doe@gmail.com</code> gives the MD5 hash of <code>e13743a7f1db7f4246badd6fd6ff54ff</code>. If this MD5 hash is found in the table of registrations, hence, that email address is registered.</p> <p>Besides that, you should have gotten a welcome email within a couple of days.</p> <p>When it doubt, contact the main teacher.</p>","tags":["FAQ","frequently asked questions","questions"]},{"location":"faq/#how-can-i-check-if-i-have-a-user-account-on-a-swedish-academic-hpc-cluster","title":"How can I check if I have a user account on a Swedish academic HPC cluster?","text":"<p>When you can login at https://supr.naiss.se/.</p> How does that look like? <p>It should look similar to this:</p> <p></p>","tags":["FAQ","frequently asked questions","questions"]},{"location":"faq/#how-to-request-access-to-the-naiss-course-project","title":"How to request access to the NAISS course project?","text":"<p>At the SUPR NAISS website, in 'Projects', click on 'Request Membership in Project' and search for <code>NAISS 2025/22-95</code> or 'NAISS Intro to Python course' (pick the one for Tetralith!).</p>","tags":["FAQ","frequently asked questions","questions"]},{"location":"faq/#where-is-the-naiss-project-for-this-course","title":"Where is the NAISS project for this course?","text":"Parameter Value Name NAISS Intro to Python course URL <code>https://supr.naiss.se/project/32968</code>","tags":["FAQ","frequently asked questions","questions"]},{"location":"faq/#i-already-have-a-project-on-a-naiss-hpc-cluster-can-i-use-that-one","title":"I already have a project on a NAISS HPC cluster. Can I use that one?","text":"<p>Yes, absolutely!</p>","tags":["FAQ","frequently asked questions","questions"]},{"location":"faq/#how-can-i-get-a-user-account-on-a-swedish-academic-hpc-cluster","title":"How can I get a user account on a Swedish academic HPC cluster?","text":"<p>Register at https://supr.naiss.se/person/register/.</p>","tags":["FAQ","frequently asked questions","questions"]},{"location":"faq/#which-hpc-cluster-should-i-use","title":"Which HPC cluster should I use?","text":"<p>There are the HPC clusters that have worked-out answers to the exercises:</p> HPC cluster name Description Alvis AI focussed, uses SSH keys for authentication Bianca Sensitive data, uses passwords and two-factor authentication COSMOS General-purpose, Lund university staff only Dardel General-purpose, uses SSH keys for authentication Kebnekaise General-purpose, Ume\u00e5 university staff only LUMI General-purpose for heavy calculations, uses SSH keys for authentication, use containers to make software available Rackham General-purpose, Uppsala university staff only Tetralith General-purpose, uses passwords for authentication <p>Without any additional information, Tetralith is recommended.</p>","tags":["FAQ","frequently asked questions","questions"]},{"location":"faq/#how-can-i-login-to-an-hpc-cluster","title":"How can I login to an HPC cluster?","text":"<p>For your favorite HPC cluster, pick your favorite login methods. For beginners: the bold login method is recommended.</p> HPC cluster Login method Documentation YouTube video Alvis SSH Documentation YouTube video Alvis Website Documentation YouTube video Bianca SSH Documentation YouTube video Bianca Website Documentation YouTube video COSMOS Local ThinLinc client Documentation YouTube video COSMOS SSH Documentation YouTube video Dardel Local ThinLinc client Documentation YouTube video Dardel SSH Documentation YouTube video Kebnekaise Local ThinLinc client Documentation YouTube video Kebnekaise SSH Documentation YouTube video Kebnekaise Website Documentation YouTube video LUMI SSH Documentation YouTube video Pelle SSH Documentation YouTube video Pelle Local ThinLinc client Documentation YouTube video Rackham Local ThinLinc client Documentation YouTube video Rackham SSH Documentation YouTube video Rackham Website Documentation YouTube video Tetralith Local ThinLinc client Documentation YouTube video Tetralith SSH Documentation YouTube video What are the differences between these login methods? <p>These are the ways to access your HPC cluster and some of their features:</p> <p></p> How it looks like How to access your HPC cluster Features Remote desktop via a website Familiar remote desktop, clumsy, clunky, no need to install software, not available at all centers Remote desktop via a local ThinLinc client Familiar remote desktop, clumsy, need to install ThinLinc Console environment using an SSH client A console environment, powerful, need to install an SSH client","tags":["FAQ","frequently asked questions","questions"]},{"location":"faq/#is-it-ok-if-i-can-login-to-an-hpc-cluster-using-other-methods","title":"Is it OK if I can login to an HPC cluster using other methods?","text":"<p>Probably: yes</p> <ul> <li>Using a website: yes</li> <li>Using a local ThinLinc client: yes</li> <li>Using WinSCP: yes</li> </ul>","tags":["FAQ","frequently asked questions","questions"]},{"location":"faq/#how-can-i-check-if-i-have-a-good-zoom-setup","title":"How can I check if I have a good Zoom setup?","text":"<ul> <li>You are in a room where you can talk</li> <li>You talk into a (standalone or headset) microphone</li> <li>Others can clearly hear you when you talk</li> <li>Others can see you</li> <li>You can hear others clearly when they talk</li> </ul>","tags":["FAQ","frequently asked questions","questions"]},{"location":"faq/#how-can-i-get-a-good-zoom-setup","title":"How can I get a good Zoom setup?","text":"<ul> <li>Find/schedule/book a room where you can talk</li> <li>Buy a simple headset</li> </ul>","tags":["FAQ","frequently asked questions","questions"]},{"location":"faq/#what-if-i-dont-have-a-good-zoom-setup-is-that-ok","title":"What if I don't have a good Zoom setup? Is that OK?","text":"<p>Tip</p> <p>Thank you for creating very interactive [class] room</p> <p>A learner from this course (source)</p> <p>No.</p> <p>You will feel left out, as the course in highly interactive. It would be weird to the other learners.</p>","tags":["FAQ","frequently asked questions","questions"]},{"location":"faq/#teaching","title":"Teaching","text":"","tags":["FAQ","frequently asked questions","questions"]},{"location":"faq/#why-is-the-course-learner-centered","title":"Why is the course learner-centered?","text":"<p>Tip</p> <p>I liked Ri-kjells teaching style!</p> <p>A learner from this course (source)</p> <p>Because that is good teaching.</p> <p>This course defines good teaching as 'evidence-based methods to let learners acquire new skills and the monitoring of this acquisition'. This means that it should be observed that learners need more/less to time to practice and following the schedule based on that. Learner-centered teaching has an effect size from 0.36 <code>[Hattie ranking]</code> or 0.64/0.70 <code>[Cornelius-White, 2007][Hattie, 2012]</code>.</p> <p>Or: it is useless to go faster than the learners can follow. Lecturing is known to negatively affect learning <code>[Hattie, 2023]</code>.</p> <p>The teaching methods of this course follow the evidence-based teaching cycle by <code>[Bell, 2020a]</code>, which allows learner-centered teaching.</p>","tags":["FAQ","frequently asked questions","questions"]},{"location":"faq/#website","title":"Website","text":"","tags":["FAQ","frequently asked questions","questions"]},{"location":"faq/#why-is-the-repository-owner-uppmax-instead-of-naiss","title":"Why is the repository owner <code>UPPMAX</code> instead of NAISS?","text":"<p>Because NAISS does not have a GitHub owner page yet.</p> <p>This repository will be transferred to a NAISS GitHub owner page when it exists.</p>","tags":["FAQ","frequently asked questions","questions"]},{"location":"faq/#why-dont-you-just-publish-the-zoom-room-on-the-website","title":"Why don't you just publish the Zoom room on the website?","text":"<p>As this course follow Zoom's recommended practices.</p>","tags":["FAQ","frequently asked questions","questions"]},{"location":"faq/#other","title":"Other","text":"","tags":["FAQ","frequently asked questions","questions"]},{"location":"faq/#what-if-i-have-another-question","title":"What if I have another question?","text":"<p>Preferably:</p> <ul> <li>Add an issue at https://github.com/UPPMAX/naiss_intro_python.   This requires a GitHub account and ensures your question is shown publicly   to all of the course's teaching team</li> </ul> <p>Else:</p> <ul> <li>Send an email to the main teacher.   There is no guarantee on a quick reply here.</li> </ul>","tags":["FAQ","frequently asked questions","questions"]},{"location":"faq/#references","title":"References","text":"<ul> <li><code>[Bell, 2020a]</code>   Bell, Mike. The fundamentals of teaching:   A five-step model to put the research evidence into practice. Routledge, 2020.</li> <li><code>[Cornelius-White, 2007]</code>   Cornelius-White, Jeffrey. \"Learner-centered teacher-student relationships   are effective: A meta-analysis.\" Review of educational   research 77.1 (2007): 113-143.</li> <li><code>[Hattie, 2012]</code>   Hattie, John. Visible learning for teachers:   Maximizing impact on learning. Routledge, 2012.   The effect size of student centered learning can be found on page 157,   which references <code>[Cornelius-White, 2007]</code> where an   an effect size of 0.64 or 0.7 was found   One example open access study is <code>[Knight &amp; Wood, 2005].</code></li> <li><code>[Hattie, 2023]</code>   Hattie, John. Visible learning:   The sequel: A synthesis of over 2,100 meta-analyses relating to achievement.   Routledge, 2023. The effect size of lecturing can be found on page 363,   which has an effect size of -0.26 with a robustness index of 4 out of 5   and is based on 3 meta analyses using 273 studies using 27,296 people,   measuring for 614 effects with a standard error of 0.08.   One example open access study is <code>[Knight &amp; Wood, 2005].</code></li> <li><code>[Hattie ranking]</code> The Hattie Ranking</li> <li><code>[Knight &amp; Wood, 2005]</code>   Knight, Jennifer K., and William B. Wood.   \"Teaching more by lecturing less.\" Cell biology education 4.4 (2005): 298-310.   paper</li> </ul>","tags":["FAQ","frequently asked questions","questions"]},{"location":"further_learning/","title":"Further learning","text":"<p>At the end of this day, you should feel comfortable to learn Python.</p> <p>These are possible next steps:</p> <ul> <li>The SCoRe overview of courses:   this includes all courses by NAISS and SciLifeLab and more</li> <li>The NAISS HPC Python course:   will allow you to run heavier calculations using more advanced Python   packages</li> <li>The Programming Formalisms course   teaches how to do programming well, according to the practices in the   literature</li> <li>The NAISS file transfer course   will help you upload and download data to/from your favorite HPC cluster</li> </ul>","tags":["learning","further","more","future"]},{"location":"learning_outcomes/","title":"Learning outcomes","text":"<p>Below are the learning outcomes of this course, as copied from its evaluation. The course is learner-centered (why?), hence the pace is determined be the learners (i.e. not by the clock).</p> <p>You can be reasonably sure you'll achieve this:</p> <ul> <li>I am comfortable using the documentation of my HPC center</li> <li>I am comfortable using the Python book</li> <li>I am comfortable learning Python</li> <li>I can load a Python version on my HPC cluster</li> <li>I can describe what the Python interpreter is</li> <li>I can use a text editor on my HPC cluster</li> <li>I can create a Python script</li> <li>I can run a Python script</li> <li>In Python, I can create a variable</li> <li>In Python, I can use a variable</li> <li>I can convert a simple equation to Python code</li> <li>In Python, I can find and use the operator for exponentiation</li> <li>In Python, I know what the modulo operator is and when to use it</li> <li>I can convert a simple text question to Python code</li> </ul> <p>Here are the rest of the learning outcomes, each item being less and less likely to be discussed:</p> <ul> <li>In Python, I can ask a user for input</li> <li>In Python, I can use user input in a calculation</li> <li>I can find and use a Python module on my HPC cluster</li> <li>In Python, I can read a file</li> <li>In Python, I can create a file</li> <li>In Python, I can use command-line arguments</li> <li>In Python, I can import the <code>matplotlib</code> library</li> <li>In Python, I can use a for loop</li> <li>In Python,   I can write a function without an argument and without a return type</li> <li>In Python, I can write a function that calls a function</li> <li>In Python, I can write a function that requires an argument</li> <li>In Python, I can write a function with a return value</li> </ul>"},{"location":"schedule/","title":"Schedule","text":"<p>The course is learner-centered</p> <p>The course is learner-centered (Why?). This means that the pace is determined be the learners (i.e. not by the clock). The breaks are always on the time specified.</p> What are the course dates? <p>See the course dates.</p> Time Focus Topic Teacher(s) 09:00-10:00 HPC Using the Python interpreter Rich\u00e8l 10:00-10:15 . Break . 10:15-11:00 HPC The way of the program Rich\u00e8l 11:00-11:15 . Break . 11:15-12:00 HPC Working with Python scripts Rich\u00e8l 12:00-13:00 . Break . 13:00-14:00 Python Variables, expressions and statements: variables Rich\u00e8l 14:00-14:15 . Break . 14:15-15:00 Python Variables, expressions and statements: operators Rich\u00e8l 15:00-15:15 . Break . 15:15-15:45 Python Variables, expressions and statements: user input Rich\u00e8l 15:40-15:45 Python Summary Rich\u00e8l 15:45-16:00 Course Evaluation Rich\u00e8l <p>Extra sessions:</p> <ul> <li>File IO</li> <li>Command line arguments</li> </ul> <ul> <li>Functions</li> <li>Further learning</li> </ul>","tags":["schedule","timetable"]},{"location":"summary/","title":"Summary","text":"<p>HPC centers have different quality of documentation: you are encouraged to file a support ticket to request better documentation.</p> <p>How to Think Like a Computer Scientist: Learning with Python 3 is a fine book to start learning Python from.</p> <p>To login to your HPC cluster via the terminal, one can use SSH as shown below, but the exact syntax differs per cluster:</p> <pre><code>ssh my_user_name@my_hpc_cluster.se\n</code></pre> <p>To find and load your favorite Python version one can use the commands below, but the exact syntax differs per cluster:</p> <pre><code>module spider python\nmodule load python\n</code></pre> <p>Python is an interpreted language. This means that an interpreter reads my code, converts it to machine code and then runs that machine code.</p> <p>The Python interpreter is started with:</p> <pre><code>python\n</code></pre> <p>The go-to text editor on an HPC cluster is called <code>nano</code>, with <code>emacs</code> and <code>vim</code> being more advanced text editors. <code>nano</code> can be started with:</p> <pre><code>nano\n</code></pre> <p>To create a Python script, one can do:</p> <pre><code>nano my_script.py\n</code></pre> <p>To run a Python script, one can do:</p> <pre><code>python my_script.py\n</code></pre> <p>To create a variable in Python, do:</p> <pre><code>my_variable = 3.14\n</code></pre> <p>To print a variable in Python, do:</p> <pre><code>print(my_variable)\n</code></pre> <p>To do exponentiation in Python, use <code>**</code>:</p> <pre><code>my_variable = 3 ** 2\n</code></pre> <p>To use the modulo operator, <code>%</code>, which is useful to determine if a number is odd/even/prime, in Python do:</p> <pre><code>my_variable = 5 % 2\n</code></pre>","tags":["summary","conclusion"]},{"location":"topics/","title":"Overview of topics","text":"<pre><code>flowchart TD\n    python[[Python]]\n\n    %% Give a white background to all nodes, instead of a transparent one\n    classDef node fill:#fff,color:#000,stroke:#000\n\n    subgraph sub_programming_language[Programming language]\n      interpreted_language[Interpreted language]\n      programming_language[Programming language]\n      scripting_language[Scripting language]\n      interpreter[Interpreter]\n      scripts[Scripts]\n      text_files[Text files]\n    end\n    style sub_programming_language fill:#ccf,color:#000,stroke:#fcc\n\n    subgraph sub_programming_terms[Programming terms]\n      user_input[User input]\n      file_io[File I/O]\n      command_line_arguments[Command-line arguments]\n      variables[Variables]\n      operators[Operators]\n      functions[Functions]\n      python_packages[Python packages]\n      graphics[Graphics]\n    end \n    style sub_programming_terms fill:#cfc,color:#000,stroke:#fcc\n\n    subgraph sub_uppmax[NAISS]\n      uppmax[Your HPC center]\n      uppmax_modules[modules]\n      uppmax_clusters[Your HPC cluster]\n      text_editors[Text editors]\n      x_forwarding[X-forwarding]\n      remote_desktop[Remote desktop]\n    end\n    style sub_uppmax fill:#fcc,color:#000,stroke:#fcc\n\n    python --&gt; |is a| programming_language\n    python --&gt; |is a| interpreted_language\n    python --&gt; |is a| scripting_language\n\n    programming_language --&gt; |uses| text_files\n    interpreted_language --&gt; |has a| interpreter\n    scripting_language --&gt; |is|interpreted_language\n    scripting_language --&gt; |runs| scripts\n    scripts --&gt; |are| text_files\n    scripts --&gt; |can use| command_line_arguments\n\n    python --&gt; |has| python_packages\n    python --&gt; |has| variables\n    python --&gt; |has| functions\n    python --&gt; |has| operators\n    functions --&gt; |use| variables\n    operators --&gt; |work on| variables\n    python_packages --&gt; |allow| graphics\n    python_packages --&gt; |allow to use| user_input\n    python_packages --&gt; |allow to do| file_io\n    python_packages --&gt; |allow to use| command_line_arguments\n\n    uppmax --&gt; |has| uppmax_clusters\n    uppmax_clusters --&gt; |have| uppmax_modules\n    uppmax_clusters --&gt; |have| text_editors\n    uppmax_clusters --&gt; |allow| x_forwarding\n    uppmax_clusters --&gt; |has| remote_desktop\n    uppmax_modules --&gt; |allow the use of| python_packages\n    uppmax_modules --&gt; |allow the use of| interpreter\n\n    text_editors --&gt; |work on|text_files\n    x_forwarding --&gt; |allows|graphics\n    remote_desktop --&gt; |allows|graphics\n\n    variables ~~~ uppmax</code></pre>","tags":["topics","overview"]},{"location":"communication/","title":"Communication","text":"<p>Here is the communication of this course:</p> No Date Communication 1 2024-01-18 Not done by me 2 2024-08-30 Not done by me 3 2025-03-04 Communication 4 2025-04-24 Not done by me 5 2025-10-14 Communication 6 2025-11-27 Not done by me"},{"location":"communication/20250304/","title":"Communication","text":"<ul> <li>Course date: 2025-03-04</li> </ul> Date Description 2025-01-10 Registration form 2025-01-10 NAISS newsletter, first announcement 2025-01-21 and onwards Welcome email 2025-02-25 and onwards Reminder email, 1 week left"},{"location":"communication/20250304/newsletter_first_announcement/","title":"NAISS newsletter, first announcement","text":"<p>This announcement is used in a newsletter</p> <p>This announcement is used in a newsletter.</p> <p>Hence, all its links must remain valid. Remove those links after the next course's iteration.</p> <p>Great course. Now, Python is not scary anymore.</p> <p>A learner from this course (source)</p> <p>This 1-day course helps you get started with Python, by working through an online and free book. We make use of HPC clusters to write and run Python code. The pace of this highly interactive course is set by the majority of learners, ensuring that any complete beginner has enough time for exercises. At the end of the day, you should feel comfortable with the basics of Python and feel familiar to a book on Python to help you on your next steps.</p> <ul> <li>Course information and registration: https://docs.uppmax.uu.se/workshops_courses/intro_to_python/</li> <li>When: Tuesday March 4th 2025, 9:00-16:00 (course schedule)</li> <li>Where: Online via Zoom</li> <li>Course material: https://uppmax.github.io/naiss_intro_python/</li> <li>Earlier evaluations of the course: https://uppmax.github.io/naiss_intro_python/evaluations/</li> </ul>"},{"location":"communication/20250304/registration_form/","title":"Registration form text","text":"<p>This text is used in the current registration form</p> <p>Intro to Python 2025-03-04</p> <p>This is the registration form for the UPPMAX course 'Intro to Python', https://docs.uppmax.uu.se/courses_workshops/intro_to_python/</p>"},{"location":"communication/20250304/registration_form/#what-is-your-email-address","title":"What is your email address?","text":"<pre><code>[field for one line of text]\n</code></pre>"},{"location":"communication/20250304/reminder_email_1_week_left/","title":"Reminder email, 1 week left","text":"<p>About this email</p> <p>This email is sent out to all learners one week in advance</p> For coordinators: progress <p>This email has been sent to all learners to and including at timestamp <code>27/02/2025 17:43:35</code></p>"},{"location":"communication/20250304/reminder_email_1_week_left/#reminder-to-intro-to-python-course-of-2025-03-04","title":"Reminder to Intro to Python course of 2025-03-04","text":"<p>Dear learners,</p> <p>Again, welcome to the 'Intro to Python' course of 2025-03-04!</p> <p>I've prepared videos on how to login and how to start Python on these HPC clusters:</p> <ul> <li>Alvis</li> <li>Bianca</li> <li>COSMOS</li> <li>Dardel</li> <li>Kebnekaise</li> <li>Rackham</li> <li>Tetralith</li> </ul> <p>If your favorite HPC cluster is missing, you are encouraged to contact me and I will happily add answers/documentation/videos for your cluster.</p> <p>If you have any questions, never hesitate to contact me.</p> <p>Please make sure you've done all your prerequisites and if yes, see you on March 4th 9:00 (sharp!) at the Zoom room below this email.</p> <p>Thanks and cheers, Rich\u00e8l Bilderbeek, NAISS 'Intro to Python' main teacher</p> <p><code>[Zoom invite text]</code></p>"},{"location":"communication/20250304/welcome_email/","title":"Welcome email","text":"<p>About this email</p> <p>This email is sent out to learners that recently registered.</p> For coordinators: progress <p>This email has been sent to all learners to and including at timestamp <code>27/02/2025 17:43:35</code></p>"},{"location":"communication/20250304/welcome_email/#welcome-to-the-intro-to-python-course-of-2025-03-04","title":"Welcome to the Intro to Python course of 2025-03-04","text":"<p>Dear learners,</p> <p>Welcome to the 'Intro to Python' course of 2025-03-04!</p> <p>Well done! You've already done one of the four prerequisites (as listed on https://uppmax.github.io/naiss_intro_python/prereqs/ ):</p> <ul> <li>[x] Prerequisite 1/4: You have registered at our registration form at here</li> <li>[ ] Prerequisite 2/4: A user account on a Swedish academic HPC cluster</li> <li>[ ] Prerequisite 3/4: Be able to login to an HPC cluster using SSH</li> <li>[ ] Prerequisite 4/4: have a good Zoom setup</li> </ul> <p>Now get ready for the hardest prerequisite: number 3. This can take multiple days, to: (1) get such a project (2) log in to that HPC cluster.</p> <p>Help, answers and videos can be found at the course's FAQ page at https://uppmax.github.io/naiss_intro_python/faq/#prerequisites .</p> <p>The course assumes:</p> <ul> <li>you can log in to an HPC cluster</li> <li>the documentation of that cluster is helpful (if not, contact your cluster's HPC center).</li> </ul> <p>If you have any questions, never hesitate to contact me.</p> <p>Please make sure you've done all your prerequisites and if yes, see you on March 4th 9:00 (sharp!) at the Zoom room below this email.</p> <p>Thanks and cheers, Rich\u00e8l Bilderbeek, NAISS 'Intro to Python' main teacher</p> <p><code>[Zoom invite text]</code></p>"},{"location":"communication/20251014/","title":"Communication","text":"<ul> <li>Course date: 2025-10-14</li> </ul> Date Description ~2025-08-01 Registration form ~2025-08-01 NAISS newsletter, first announcement ~2025-08-01 and onward Welcome email 2025-10-14 Reminder in the morning"},{"location":"communication/20251014/newsletter_first_announcement/","title":"NAISS newsletter, first announcement","text":"<p>This announcement is used in a newsletter</p> <p>This announcement is used in a newsletter.</p> <p>Hence, all its links must remain valid. Remove those links after the next course's iteration.</p> <p>Great course. Now, Python is not scary anymore.</p> <p>A learner from this course (source)</p> <p>This 1-day course helps you get started with Python, by working ourselves through an online and free book. Although the focus is on learning Python, we do work in an HPC environment and you will be taught the bare minimum to run Python on an UPPMAX HPC cluster. The pace of this highly interactive course is set by the majority of learners, ensuring that any complete beginner has enough time for exercises. At the end of the day, you should feel comfortable with the basics of Python and feel familiar to a book on Python to help you on your next steps.</p> <ul> <li>Course information and registration: https://docs.uppmax.uu.se/workshops_courses/intro_to_python/</li> <li>When: Tuesday October 14th 2025, 9:00-16:00 (course schedule)</li> <li>Where: Online via Zoom</li> <li>Course material: https://uppmax.github.io/naiss_intro_python/</li> <li>Earlier evaluations of the course: https://uppmax.github.io/naiss_intro_python/evaluations/</li> </ul>"},{"location":"communication/20251014/registration_form/","title":"Registration form text","text":"<p>This text is used in the current registration form</p> <p>Intro to Python for HPC 2025-10-14</p> <p>This is the registration form for the UPPMAX course 'Intro to Python for HPC', https://docs.uppmax.uu.se/courses_workshops/intro_to_python/</p> <p>Registration closes at 2025-10-09.</p>"},{"location":"communication/20251014/registration_form/#what-is-your-email-address","title":"What is your email address?","text":"<pre><code>[field for one line of text]\n</code></pre>"},{"location":"communication/20251014/registration_form/#i-want-to-use-the-hpc-cluster","title":"I want to use the HPC cluster","text":"<ul> <li>(recommended) ... that is provided by the course (called Tetralith)</li> <li>... that I already work on</li> </ul>"},{"location":"communication/20251014/registration_form/#if-you-work-on-your-own-hpc-cluster-what-is-its-name","title":"If you work on your own HPC cluster, what is its name?","text":"<ul> <li><code>[open question]</code></li> </ul>"},{"location":"communication/20251014/reminder_in_morning/","title":"Reminder email in the morning","text":""},{"location":"communication/20251014/reminder_in_morning/#intro-to-python-for-hpc-see-you-at-900-sharp","title":"Intro to Python for HPC: see you at 9:00 sharp","text":"<p>Dear learners,</p> <p>Again, welcome to today's 'Intro to Python for HPC' course!</p> <p>I assume that you've done all the prerequisites for the course:</p> <ul> <li>[x] Prerequisite 1/5: You have registered at our registration form</li> <li>[x] Prerequisite 2/5: You have registered at SUPR</li> <li>[x] Prerequisite 3/5: You have access this course's NAISS project</li> <li>[x] Prerequisite 4/5: You are able to login to your HPC cluster</li> <li>[x] Prerequisite 5/5: You have a good Zoom setup</li> </ul> <p>See you at 9:00 (sharp!) in the Zoom room below!</p> <p>If you have any questions, I will be in the Zoom room earlier :-)</p> <p>Thanks and cheers, Rich\u00e8l Bilderbeek, NAISS 'Intro to Python for HPC' main teacher</p> <p><code>[Zoom invite text]</code></p>"},{"location":"communication/20251014/welcome_email/","title":"Welcome email","text":"<p>About this email</p> <p>This email is sent out to learners that recently registered.</p> For coordinators: progress <p>This email has been sent to all learners to and including at timestamp <code>08/10/2025 17:44:00</code></p>"},{"location":"communication/20251014/welcome_email/#welcome-to-the-intro-to-python-for-hpc-course-of-2025-10-14-step-2","title":"Welcome to the 'Intro to Python for HPC' course of 2025-10-14 step 2","text":"<p>Dear learners,</p> <p>Welcome to the 'Intro to Python for HPC' course of 2025-10-14!</p> <p>Well done! You've already done one of the five prerequisites (as listed on https://uppmax.github.io/naiss_intro_python/prereqs/ ):</p> <ul> <li>[x] Prerequisite 1/5: You have registered at our registration form</li> <li>[ ] Prerequisite 2/5: You have registered at SUPR</li> <li>[ ] Prerequisite 3/5: You have requested access to this course's NAISS project</li> <li>[ ] Prerequisite 4/5: You are able to login to your HPC cluster</li> <li>[ ] Prerequisite 5/5: You have a good Zoom setup</li> </ul> <p>Next step is step 2. Please register at SUPR at https://supr.naiss.se/person/register/ and continue onwards from there.</p> <p>Help, answers and videos can be found at the course's FAQ page at https://uppmax.github.io/naiss_intro_python/faq/#prerequisites .</p> <p>The course assumes you can log in to an HPC cluster, so let's make that work :-) .</p> <p>If you have any questions, never hesitate to contact me.</p> <p>Please make sure you've done all your prerequisites and if yes, see you on October 14th 9:00 (sharp!) at the Zoom room below this email.</p> <p>Thanks and cheers, Rich\u00e8l Bilderbeek, NAISS 'Intro to Python for HPC' main teacher</p> <p><code>[Zoom invite text]</code></p>"},{"location":"communication/20251014/welcome_email/#welcome-to-the-intro-to-python-for-hpc-course-of-2025-10-14-last-steps-course-project","title":"Welcome to the 'Intro to Python for HPC' course of 2025-10-14 last steps (course project)","text":"<p>Dear learners,</p> <p>Welcome to the 'Intro to Python for HPC' course of 2025-10-14!</p> <p>Well done! You've already done two of the five prerequisites (as listed on https://uppmax.github.io/naiss_intro_python/prereqs/ ):</p> <ul> <li>[x] Prerequisite 1/5: You have registered at our registration form</li> <li>[x] Prerequisite 2/5: You have registered at SUPR</li> <li>[ ] Prerequisite 3/5: You have accepted access to the NAISS course project</li> <li>[ ] Prerequisite 4/5: You are able to login to your HPC cluster</li> <li>[ ] Prerequisite 5/5: You have a good Zoom setup</li> </ul> <p>Next steps are numbers 3, 4 and 5.</p> <ul> <li>For step 3: accept the SUPR email you've gotten to get access to this course's   project. Alternatively, you can request access to the project   yourself: the project is called 'NAISS Intro to Python course',   with URL https://supr.naiss.se/project/32968</li> <li>For step 4: follow the documentation and/or video at   https://uppmax.github.io/naiss_intro_python/faq/#how-can-i-login-to-an-hpc-cluster</li> <li>For step 5: please do this, it will be more fun for everybody!</li> </ul> <p>Help, answers and videos can be found at the course's FAQ page at https://uppmax.github.io/naiss_intro_python/faq/#prerequisites .</p> <p>The course assumes you can log in to an HPC cluster, so let's make that work :-)</p> <p>If you have any questions, never hesitate to contact me.</p> <p>Please make sure you've done all your prerequisites and if yes, see you on October 14th 9:00 (sharp!) at the Zoom room below this email.</p> <p>Thanks and cheers, Rich\u00e8l Bilderbeek, NAISS 'Intro to Python for HPC' main teacher</p> <p><code>[Zoom invite text]</code></p>"},{"location":"communication/20251014/welcome_email/#welcome-to-the-intro-to-python-for-hpc-course-of-2025-10-14-last-steps-own-project","title":"Welcome to the 'Intro to Python for HPC' course of 2025-10-14 last steps (own project)","text":"<p>Dear learners,</p> <p>Welcome to the 'Intro to Python for HPC' course of 2025-10-14!</p> <p>Well done! You've already done three of the five prerequisites (as listed on https://uppmax.github.io/naiss_intro_python/prereqs/ ):</p> <ul> <li>[x] Prerequisite 1/5: You have registered at our registration form</li> <li>[x] Prerequisite 2/5: You have registered at SUPR</li> <li>[x] Prerequisite 3/5: You have access this course's NAISS project</li> <li>[ ] Prerequisite 4/5: You are able to login to your HPC cluster</li> <li>[ ] Prerequisite 5/5: You have a good Zoom setup</li> </ul> <p>Next steps are numbers 4 and 5.</p> <ul> <li>For step 4: if you have not not logged in this course's NAISS project,   follow the documentation and/or videos at   https://uppmax.github.io/naiss_intro_python/faq/#how-can-i-login-to-an-hpc-cluster</li> <li>For step 5: please do this, it will be more fun for everybody!</li> </ul> <p>Help, answers and videos can be found at the course's FAQ page at https://uppmax.github.io/naiss_intro_python/faq/#prerequisites .</p> <p>The course assumes you can log in to an HPC cluster, so let's make that work :-)</p> <p>If you have any questions, never hesitate to contact me.</p> <p>Please make sure you've done all your prerequisites and if yes, see you on October 14th 9:00 (sharp!) at the Zoom room below this email.</p> <p>Thanks and cheers, Rich\u00e8l Bilderbeek, NAISS 'Intro to Python for HPC' main teacher</p> <p><code>[Zoom invite text]</code></p>"},{"location":"communication/20251014/welcome_email/#2025-10-13-step-2","title":"2025-10-13 step 2","text":""},{"location":"data/","title":"Data","text":"<p>Data collected in this course</p> No Date Data 1 2024-01-18 . 2 2024-08-30 Data 3 2025-03-04 Data 4 2025-10-14 Data"},{"location":"data/20240830/","title":"2024-08-30","text":""},{"location":"data/20240830/#learners-in-time","title":"Learners in time","text":"<ul> <li>Data: 20240830_counts.csv</li> <li>Script: analyse_counts.R</li> </ul>"},{"location":"data/20250304/","title":"2025-03-04","text":""},{"location":"data/20250304/#registrations","title":"Registrations","text":"<p>As a learner, it can be assuring to know you have registered. Here are the registrations we've received, with an MD5 of the email address.</p> <ul> <li>Data: registrations.csv<ul> <li><code>timestamp</code>: the timestamp in <code>DD/MM/YYYY hh:mm:ss</code>   format</li> <li><code>email</code>: the MD5 hash of the email address</li> </ul> </li> </ul>"},{"location":"data/20250304/#number-of-registrations-in-time","title":"Number of registrations in time","text":"<ul> <li>Data: n_registrations_in_time.csv</li> <li>Code: plot_n_registrations_in_time.R<ul> <li><code>date</code>: the date, in <code>DD/MM/YYYY</code> format</li> <li><code>n</code>: the amount of registrations at that day</li> <li><code>cumulative</code>: the total amount of registrations   at the end of that day</li> </ul> </li> </ul>"},{"location":"data/20250304/#number-of-learners-present-in-time","title":"Number of learners present in time","text":"<ul> <li>Data: 20250304_counts.csv</li> <li>Code: analyse_counts.R</li> </ul>"},{"location":"data/20250304/#showing-up","title":"Showing up","text":""},{"location":"data/20251014/","title":"2025-10-14","text":""},{"location":"data/20251014/#registrations","title":"Registrations","text":"<p>As a learner, it can be assuring to know you have registered. Here are the registrations we've received, with an MD5 of the email address.</p> <ul> <li>Data: registrations.csv<ul> <li><code>timestamp</code>: the timestamp in <code>DD/MM/YYYY hh:mm:ss</code>   format</li> <li><code>email</code>: the MD5 hash of the email address</li> </ul> </li> </ul>"},{"location":"data/20251014/#number-of-registrations-in-time","title":"Number of registrations in time","text":"<ul> <li>Data: n_registrations_in_time.csv</li> <li>Code: plot_n_registrations_in_time.R<ul> <li><code>date</code>: the date, in <code>DD/MM/YYYY</code> format</li> <li><code>n</code>: the amount of registrations at that day</li> <li><code>cumulative</code>: the total amount of registrations   at the end of that day</li> </ul> </li> </ul> <p>Add one</p> <p>Add one, as A.S. registered by email after the course registration was closed</p>"},{"location":"data/20251014/#overview-of-hpc-clusters-registered","title":"Overview of HPC clusters registered","text":"HPC cluster Number of registrations Tetralith 22 + 1 Bianca 2 Dardel 4 COSMOS 1 Bem2 1 Vera 1 Rackham 1"},{"location":"data/20251014/#attendance","title":"Attendance","text":""},{"location":"evaluations/","title":"Evaluations","text":"Where can I evaluate this course? <p>Go to evaluation (singular) :-)</p> <p>Here are the evaluation results of this course:</p> No Date Evaluations Success score 1 2024-01-18 Evaluation None measured 2 2024-08-30 Evaluation 86% 3 2025-03-04 Evaluation 82% 4 2025-04-24 Evaluation 92% 5 2025-10-14 Evaluation 95% 6 2025-11-27 Evaluation . <ul> <li>The 'Success score' is the average confidence the learners   have on each of the learning outcomes of the course</li> </ul> <p></p>","tags":["evaluations"]},{"location":"evaluations/20240118/","title":"2024 January","text":"<ul> <li>Lesson plan</li> <li>Evaluation</li> <li>Reflection</li> </ul> <p>In this course's iteration, it was part of the 'UPPMAX Intro course'. Due to this, the evaluation results were directed to this course or others.</p> <p>Here, only the results that clearly applied to this course are shown. This selection may bias the evaluation results, but it is the best that could be done: the full evaluation results are only visible to the teachers of the full four-day course.</p>"},{"location":"evaluations/20240118/#anonymous-evaluations","title":"Anonymous evaluations","text":"<p>These are the anonymous evaluation results that clearly apply to me.</p> <p></p> <p></p> <p>Note that I am the only instructor that got a 2 out of 5.</p>"},{"location":"evaluations/20240118/#what-did-you-like-the-most-about-the-course","title":"What did you like the most about the course?","text":"<p>This fulfilled all of my requirements as a beginner to Uppmax and basic coding in BASH. I liked the hands-on nature of the activities, especially with Richel. Although it was intense and tiring, it forced effective learning</p> <p>This is great to hear! This was the whole idea: we know that learners prefer a passive lecture over active teaching, even though they learn less.</p>"},{"location":"evaluations/20240118/#what-did-you-like-the-least-about-the-course","title":"What did you like the least about the course?","text":"<p>At the Python section, i didn't like that we skipped some of the solutions. After trying out and failing i would like to see at least how to solve it, and we lost a lot of time on some of the easier exercises.</p> <p>I agree with the learner that at the end of the day, I started skipping things. I did so purposefully, yet I did not expect this was problematic enough to end up on an evaluation.</p> <p>Python scripts part</p> <p>Too bad that there is no reason here...</p>"},{"location":"evaluations/20240118/#how-do-you-think-we-could-improve-the-course","title":"How do you think we could improve the course?","text":"<p>more paired up exercises</p> <p>I was the only instructor that did this. I am happy at least one learner liked it :-)</p>"},{"location":"evaluations/20240118/#do-you-have-any-additional-comments-or-suggestions","title":"Do you have any additional comments or suggestions?","text":"<p>I liked the course overall, however Python may need its own course, because it couldn't cover much because of short time, and the exercises skipped from basic stuff to intermediate pretty quick at least for me as a person who didn't work with python before.</p> <p>I wonder where that quick skip from basic to intermediate happened. I'd guess at file IO, which indeed is a jump from book chapter 3 to chapter 13. Next time, I should invest some time in bridging this gap.</p> <p>For the Python session in the last day, we got a lot of practice time but time was much behind the schedule. I was also stuck with some errors. I suggest intead of only two students in a break room, assign more students in a room and the questions are likely be solved. Teacher show also provide correct answers after practice.</p> <p>This is a new insight, that if a course is learner-centered (i.e. the pace is determined by the learners) and the schedule is not completed, this may give a negative effect. I will reshape the schedule to help learners get the opposite effect.</p> <p>I am unsure about using more than two learners: in the end, learners that have finished an exercise were sent to help, hence rooms would fill up to three or four learners.</p> <p>Indeed, here too, in the end I cut corners in not showing the answers on purpose. It is a more sensitive matter than I thought :-)</p>"},{"location":"evaluations/20240118/#informal-evaluations","title":"Informal evaluations","text":"<p>This evaluations had the form of an informal dialogue.</p> <ul> <li>From 1 learner</li> </ul> <p>I had some questions, for example 'What is the interactive node going to do with my output?'. It is great that we practiced this!</p> <p>If no video, the teacher cannot see when learners are lost: great idea to turn cameras on for that too!</p> <ul> <li>lovely</li> <li>fresh</li> <li>kept audience awake</li> <li>As a learner, you do not want to be berated when giving an answer.   Richel tries to gently deal with a wrong answer and he does this great</li> <li>cameras on is great: else learners feel alone</li> <li>in a gentle way, Richel makes people feel that this is serious:   there is a schedule, there are exercises and we are going to do it!</li> <li>breaks are great: two hours, 1.5 hours is tough!</li> <li>interrupting an exercise for a break is fine</li> </ul>"},{"location":"evaluations/20240830/","title":"Evaluation","text":"<ul> <li>average_confidences.csv</li> <li>success_score.txt: 86%</li> <li>Reflection</li> </ul>"},{"location":"evaluations/20240830/#anonymous-feedback","title":"Anonymous feedback","text":"<p>From anonymous_feedback.txt:</p> <p>Loved the organisation, very well prepared course! Richel is the best.</p>"},{"location":"evaluations/20240830/#survey-feedback","title":"Survey feedback","text":"<p>From survey_feedback.txt:</p> <ul> <li>Great course. Now, Python is not scary anymore.</li> <li>Thanks for the class today! It was very well organized and I really   appreciated your energy. I feel like maybe some things were a little basic   for me and I wish we had gotten into the more advanced stuff at the end.   But this really reinforced the basics for me and I'm still glad that I did it.</li> <li>Thank you for creating very interactive [class] room</li> <li>I liked Ri-kjells teaching style!</li> </ul>"},{"location":"evaluations/20240830/#scores","title":"Scores","text":""},{"location":"evaluations/20250304/","title":"Evaluation 2025-03-04","text":"<ul> <li>Number of registrations: 67</li> <li>Number of participants: 16 (24% show-up rate)</li> <li>Number of evaluations:  15 (94% survey response)</li> <li>Reflection</li> </ul>"},{"location":"evaluations/20250304/#results","title":"Results","text":"<ul> <li>anonymous_evaluations.txt</li> <li>survey.csv</li> <li>survey_text_question.txt</li> <li>email.txt</li> <li>success_score.txt: 82%</li> </ul>"},{"location":"evaluations/20250304/#analysis","title":"Analysis","text":"<ul> <li>script used: analyse.R</li> <li>average_confidences.csv</li> <li>success_score.txt</li> </ul>"},{"location":"evaluations/20250424/","title":"Evaluation 2025-04-24","text":"<ul> <li>Number of registrations: ?</li> <li>Number of participants: ?</li> <li>Number of evaluations:  10</li> <li>Lesson plan</li> <li>Evaluation</li> <li>Reflection</li> </ul>"},{"location":"evaluations/20250424/#results","title":"Results","text":"<ul> <li>anonymous_feedback.txt</li> <li>survey_start.csv</li> <li>survey_end.csv</li> <li>survey_end_text_question.txt</li> <li>success_score.txt: 92%</li> </ul>"},{"location":"evaluations/20250424/#anonymous_feedbacktxt","title":"anonymous_feedback.txt","text":"<ul> <li>The first day of the course was interactive, fun, and really engaging.   The teacher was very involved and did a great job keeping everyone   interested and participating. The material is well-structured,   and the session felt productive from start to finish. Looking forward to more!</li> <li>Hello, I will need to leave in half an hour for a doctor's appointment.   Will that be possible? I think I could keep hearing through my phone.</li> <li>Fundamental intro to basics Python are always a good refreshing operation</li> </ul>"},{"location":"evaluations/20250424/#analysis-only-end","title":"Analysis, only end","text":"<ul> <li>script used: analyse.R</li> <li>average_confidences.csv</li> <li>success_score.txt</li> </ul>"},{"location":"evaluations/20250424/#analysis-pre-and-post","title":"Analysis, pre and post","text":"<ul> <li>analyse_pre_post.R</li> <li>stats.md</li> </ul>"},{"location":"evaluations/20250424/stats/","title":"Stats","text":"question mean_pre mean_post p_value different I am comfortable using the documentation of my HPC center 2.50 4.2 0.0036531 TRUE I am comfortable using a Python book 2.90 4.4 0.0128295 TRUE I am comfortable learning Python 3.90 4.9 0.0175652 TRUE I can login to my HPC cluster 3.75 4.8 0.0385298 TRUE I can load a Python version on my HPC cluster 2.80 4.7 0.0034276 TRUE I can describe what the Python programming language is 3.25 4.3 0.0406953 TRUE I can describe what the Python interpreter is 2.30 4.3 0.0009963 TRUE I can use a text editor on my HPC cluster 2.95 4.7 0.0049815 TRUE I can create a Python script 3.40 4.8 0.0185695 TRUE I can run a Python script 3.55 4.8 0.0221459 TRUE In Python, I can create a variable 3.55 4.5 0.0760026 FALSE In Python, I can use a variable 3.60 4.5 0.1072985 FALSE I can convert a simple equation to Python code 3.45 4.8 0.0218804 TRUE In Python, I can find and use the operator for exponentiation 3.00 4.8 0.0014699 TRUE In Python, I know what the modulo operator is and when to use it 2.45 4.6 0.0003304 TRUE I can convert a simple text question to Python code 2.95 4.8 0.0024986 TRUE"},{"location":"evaluations/20251014/","title":"2025-10-14","text":"<ul> <li>Lesson plan</li> <li>Evaluation</li> <li>Reflection</li> <li>Number of non-duplicate registrations: 30</li> <li>Number of cancellations: 3</li> <li>Number of active participants, whole day: 6 (22%)</li> <li>Number of active participants, either half-day: 12   (some learners attended 1 half-day only) (44%)</li> <li>Number of evaluations: 6 (100% fill-in rate by those at the second half-day)</li> </ul>"},{"location":"evaluations/20251014/#results","title":"Results","text":"<ul> <li>anonymous_feedback.txt</li> <li>survey_start.csv</li> <li>survey_end.csv</li> <li>survey_end_text_question.txt</li> <li>success_score.txt: 95%</li> </ul>"},{"location":"evaluations/20251014/#feedback","title":"Feedback","text":"<p>From anonymous_feedback.txt:</p> <ul> <li>Very well designed and beginner friendly training!</li> <li>A very nice basic Python course for beginners   who want to start using Python on HPC.   The course website is very informative and tidy. Thanks a lot!</li> </ul> <p>From survey_end.csv:</p> <ul> <li>On the whole I feel the course was good, just not on the right level for me.   However, the materials for the 4-day course   (https://uppmax.github.io/HPC-python/index.html)   led me to some more advanced stuff: automatic code optimization with Numba,   and indirectly to automatic parallelization with DECO.</li> <li>Very nice course for the Python beginner!</li> <li>Great course, beginner-friendly!</li> <li>Overall, it was a good course for complete beginners.   However, it would have been nicer to have more discussion   and less independent reading.   Much of the material from the Python book could have been replaced   by direct (faster) explanations from the instructor,   followed by group discussions and more strictly collaborative exercises.   This approach would likely have led to faster and more effective learning.</li> <li>Since there are already plenty of Python tutorials available online,   a course like this should focus on being more interactive rather   than being a space where to work independently through existing materials.   I also would have appreciated covering some more essential   yet slightly advanced topics\u2014such as functions, available python packages,   and similar concepts\u2014instead of spending as much time on very basic material,   like simple arithmetic with operators.</li> </ul>"},{"location":"evaluations/20251014/#analysis-only-end","title":"Analysis, only end","text":"<ul> <li>script used: analyse.R</li> <li>average_confidences.csv</li> <li>success_score.txt</li> </ul>"},{"location":"evaluations/20251014/#analysis-pre-and-post","title":"Analysis, pre and post","text":"<ul> <li>analyse_pre_post.R</li> <li>stats.txt</li> </ul> question mean_pre mean_post p_value different I am comfortable using the documentation of my HPC center 2.727273 4.500000 0.0099316 TRUE I am comfortable using a Python book 2.181818 4.666667 0.0048339 TRUE I am comfortable learning Python 3.272727 4.833333 0.0039403 TRUE I can login to my HPC cluster 4.000000 5.000000 0.0197055 TRUE I can load a Python version on my HPC cluster 2.818182 5.000000 0.0045775 TRUE I can describe what the Python programming language is 2.181818 4.000000 0.0268995 TRUE I can describe what the Python interpreter is 1.636364 4.000000 0.0065500 TRUE I can use a text editor on my HPC cluster 2.909091 5.000000 0.0046626 TRUE I can create a Python script 2.090909 4.833333 0.0074328 TRUE I can run a Python script 2.636364 5.000000 0.0045213 TRUE In Python, I can create a variable 2.000000 5.000000 0.0046912 TRUE In Python, I can use a variable 2.000000 5.000000 0.0019569 TRUE I can convert a simple equation to Python code 1.909091 5.000000 0.0019982 TRUE In Python, I can find and use the operator for exponentiation 1.272727 5.000000 0.0016461 TRUE In Python, I know what the modulo operator is and when to use it 1.181818 5.000000 0.0016461 TRUE I can convert a simple text question to Python code 1.181818 4.500000 0.0011858 TRUE"},{"location":"evaluations/20251127/","title":"2025-11-27","text":""},{"location":"lesson_plans/","title":"Lesson plans","text":"<p>Here are the lesson plans of this course:</p> No Date Lesson plans 1 2024-01-18 Lesson plan 2 2024-08-30 Lesson plan 3 2025-03-04 Lesson plan 4 2025-04-24 Lesson plan 5 2025-10-14 Lesson plan 6 2025-11-27 Lesson plan","tags":["lesson plans"]},{"location":"lesson_plans/20240118/","title":"Lesson plan","text":"<ul> <li>Lesson plan</li> <li>Evaluation</li> <li>Reflection</li> <li>Intro to Python, day 4 of the 'Intro to UPPMAX' course</li> <li>Teacher: Richel</li> <li>Day: Thursday 2024-01-18</li> </ul> <p>Teaching goals:</p> <ul> <li>Learners have used the UPPMAX documentation</li> <li>Learners have used a free and online book they can use for future reference</li> <li>Learners have loaded Python using the module system</li> <li>Learners have used the Python interpreter</li> <li>Learners have used command-line arguments as input</li> <li>Learners have read a file</li> <li>Learners have written to a file</li> <li>Learners have created a plot, e.g. a scatter plot</li> <li>Learners feel that Python is something they can do</li> <li>Learners work in small groups</li> <li>Learners have enough breaks</li> <li>Practice to use the fundamental teaching cycle (as discussed in   Mike Bell's 'The Fundamentals of Teaching': (1) prior knowledge,    (2) presentation, (3) challenge, (4) feedback, (5) repetition</li> </ul> <p>Non-goals:</p> <ul> <li>Discuss as many Python concepts as possible,   instead follow the group's pace</li> <li>Stick to the schedule about Python theory,   instead follow the group's pace</li> <li>Practice Python theory enough to master it,   instead follow the group's pace</li> <li>Tailor to advanced Python developers,   instead follow the beginners' pace   and let the more advanced learners help</li> <li>Teach best practices,   instead show those best practices</li> <li>Use teaching materials developed by colleagues just to be nice.   Instead, use free-online teaching materials developed by others,   so that me and my colleagues do not need to maintain it</li> </ul> <p>Negative feedback that I will enjoy and not respond to:</p> <ul> <li>'The course goes too slow': this is an introduction, aimed at beginners.   The more advanced learners inevitably will find it go too slow.</li> <li>'Lectures are too short' or 'The contents should be taught':   strategic learners will prefer passive listening   over active teaching methods. Although listening is an activity that   strategic learners appreciate,   it has a too small effect for transferring knowledge.   I will not feel sorry for putting my learners to work :-)</li> <li>'Go more in-depth': this is an introduction, aimed at beginners,   so I cover the basics and we get stuff to run. I will go as deep as time   permits me.</li> <li>'Breaks interrupt the flow': I agree it does. Still, breaks are   important. And if you feel interrupted in a flow, it is nice to feel   you like to continue</li> </ul> <p>Negative feedback that I will respond to:</p> <ul> <li>'The course goes too fast': this is an introduction, aimed at beginners.   If even the beginners need more time, I must slow down</li> </ul> <p>Negative feedback that I will not enjoy and not respond to:</p> <ul> <li>'Chaotic': this is nonsense. Judging by the preparation, its is a   well-prepared student-paced day.</li> <li>'We want regular lectures'. I practice what the literature tells me   what is most effective. I won't feel bad for doing what I   is most/more effective</li> </ul>"},{"location":"lesson_plans/20240118/#schedule","title":"Schedule","text":"Time Topic 09:00-10:00 Using the Python interpreter, the way of the program 10:00-10:15 Break 10:15-11:00 Working with Python scripts, variables 11:00-11:15 Break 11:15-12:00 operators, user input 12:00-13:00 Lunch 13:00-14:00 UPPMAX modules and Python packages 14:00-14:15 Break 14:15-15:00 File IO, command line arguments 15:00-15:15 Break 15:15-16:00 Graphics, functions"},{"location":"lesson_plans/20240830/","title":"Lesson plan","text":"<p>I've already taught using this material once. The lesson plans are in the top of the material of each session, hence no need to write it here.</p> <p>I will use my general 'Duos in breakout rooms' procedure, but for groups of 3, as this worked well on Day 1.</p>"},{"location":"lesson_plans/20250304/","title":"2025-03-04","text":""},{"location":"lesson_plans/20250304/#2025-01-13","title":"2025-01-13","text":"<p>The course was widened in scope from UPPMAX-only to NAISS-wide, two hours before a newsletter needed to be sent out. I prepared the text for a newsletter, assuming I will get the course material in shape later.</p> <p>First I will get the website into good shape, before transitioning the content to be NAISS-wide. Done! Version 2.3.1 builds cleanly!</p> <p>One drawback of being NAISS-wide is that UPPMAX (as far as I can see) has the only user documentation suitable for teaching. I will be ruthless when needed, and add things to the UPPMAX doc.</p> <p>Another drawback of being NAISS-wide is that the evaluation question 'I am comfortable using my HPC center's documentation' will vary per center. It is part of the course to use other center's documentation, I will encourage our learners to give feedback regarding other center's documentation.</p> <ul> <li>[x] Add to the evaluation:   'If you think the documentation of your HPC cluster should be improved,   write down its name here'</li> </ul> <p>Going NAISS-wide will make me remove 'I can start an interactive session on my HPC cluster' as not all NAISS clusters have this. If they have it, they differ. This course is about learning Python and less on HPC clusters</p> <ul> <li>[x] Remove interactive session</li> </ul>"},{"location":"lesson_plans/20250304/#2025-01-21","title":"2025-01-21","text":"<p>The newsletter was rushed and I only know the constraints I've asked for. This makes it hard to write a 'Welcome to the course' email, as too many things may change in the very near future.</p> <p>At the end of the day, I decided to write an email with whatever I knew to the learners.</p>"},{"location":"lesson_plans/20250304/#2025-02-18","title":"2025-02-18","text":"<p>The number of registrations passed 60, hence I asked Bj\u00f6rn Claremar for help. I expect a third to show up, which is 20 learners. Putting these in breakout rooms of 3 learners is 7 breakout rooms. I think 5 breakout rooms per teacher is reasonable. I have the exercise procedure well documented for any helper, so that anyone can understand what is expected of him/her.</p>"},{"location":"lesson_plans/20250304/#2025-02-24","title":"2025-02-24","text":"<p>The 'Working with Python scripts' seems redundant to me. I will need to double-check before I delete it. On the other hand, it seems like a good practice ...</p>"},{"location":"lesson_plans/20250304/#2025-02-26","title":"2025-02-26","text":"<p>I decided to keep the 'Working with Python scripts' and I explain the reason at its page.</p> <p>I sent all learners the '1 week left' reminder and asked if there were more HPC clusters that I should discuss. Out of around 63 learners, 2 responded and hoped me to add the Vera HPC cluster. As I cannot request access myself, I asked to get access to one of their Vera projects, or else to give them access to my Alvis project. Both learners accepted to use my Alvis project.</p> <p>Remember for next time:</p> <ul> <li>[/] List the clusters supported by this course. These are:   Alvis, Bianca, COSMOS, Dardel, Kebnekaise, Rackham, Tetralith</li> </ul> <p>Remember for next time:</p> <ul> <li>[x] Also publish the date when registration closes</li> </ul>"},{"location":"lesson_plans/20250304/#2025-03-03","title":"2025-03-03","text":"<p>I had emails from two learners that had trouble preparing for the course.</p> <p>One learner got this text from NSC:</p> <p>Perhaps there has been some misunderstanding - are you participating in a \"Introduction to python\" course (e.g. https://www.naiss.se/event/introduction-to-python/). If so, the course organizers have the responsibility of requesting NAISS resources. You can strike the proposal in this case. If you are planning to run a python course yourself, we need more information to grant your application. Note, for NAISS to accept applications for courses they must be at the PhD level. We also need to know (or have an estimate) of the number of participants, the dates and duration of the course and some information on the content/softwares to be used and a justification for the amount of resources requested.</p> <p>I added the learner to my project. From this, I now understand that I need to prepare the resources for my courses. Luckily, I already did so :-)</p> <p>This does mean I need to change the registration form.</p> <ul> <li>[x] Update registration form and let learners pick an HPC cluster,   so I can add them to my projects</li> </ul> <p>I've closed the registration form.</p> <p>The text was:</p> <p>This is the registration form for the NAISS course 'Intro to Python', https://docs.uppmax.uu.se/courses_workshops/intro_to_python/ .</p> <p>I have added these lines:</p> <p>Registration is closed.</p> <p>However, if you are already comfortable using a NAISS HPC cluster, you are still welcome, as you can still fulfill the prerequisites at https://uppmax.github.io/naiss_intro_python/prereqs/ in time. Contact [my email] and he will happily give you the course details :-)</p> <p>So, for tomorrow, do:</p> <ul> <li>[x] Decide upon teaching form</li> <li>[x] Create an overview of how hard exercises   are for the different HPC clusters</li> </ul> <p>Teaching form:</p> <ul> <li>Use rooms called after the HPC clusters first. Keep these   rooms until all have logged in<ul> <li>[x] Check how easy this is to do in Zoom<ul> <li>This needs to be done by hand. Hence, use a table instead</li> </ul> </li> </ul> </li> <li>Randomly shuffle people when we start doing 'regular Python'</li> </ul> <p>With that, I think I am ready to go!</p>"},{"location":"lesson_plans/20250424/","title":"Lesson plan 2025-04-24","text":"<ul> <li>As part of the HPC Python course</li> </ul> <p>From the past course iteration's reflection:</p> <ul> <li>[x] Create an exercise at the start of the LOs</li> <li>[x] Add an image to show what an interpreter does</li> <li>[x] Remove the mermaid plots</li> <li> <p>[x] Add a 'Further learning' session</p> </li> <li> <p>[x] Merge 'The way of the program' and 'Working with Python scripts'</p> <ul> <li>[ ] Do so next iteration</li> </ul> </li> <li>[x] Merge 'Variables, expressions and statements: operators'   and 'Variables, expressions and statements: user input'<ul> <li>[ ] Do so next iteration</li> </ul> </li> </ul>"},{"location":"lesson_plans/20251014/","title":"2025-10-14","text":"<ul> <li>Lesson plan</li> <li>Evaluation</li> <li>Reflection</li> <li>Number of registrations: 30 (i.e. 32 and 2 cancellations)</li> </ul>"},{"location":"lesson_plans/20251014/#2025-10-13-preparation","title":"2025-10-13 preparation","text":"<p>I have only this day to prepare. Yet, the material is in a good state, so that will work.</p> <p>Let's first go through the last reflections:</p> <ul> <li>[x] Encourage colleagues to be absent</li> <li>[x] Let learners add the cluster name to their Zoom name, else write it down</li> <li>[Low] Make the later material Good</li> <li>[x] Show better when HPC is done and Python-only starts</li> <li>[Medium] Add 'Be able to write simple Python scripts'   as the goal of the Python-only part</li> <li>[High] Add Python package modules</li> <li>[Low] Assume variables are understood well enough</li> <li>[Medium] Spend a bit more time on text editors</li> <li>[x] Create breakout rooms that fit the learners</li> </ul> HPC cluster Number of registrations Tetralith 22 Dardel 4 Bianca 2 Bem2 1 COSMOS 1 Rackham 1 Vera 1"},{"location":"lesson_plans/20251014/#2025-10-14-preparation","title":"2025-10-14 preparation","text":"<p>Let's first go through the last reflections:</p> <ul> <li>[High] Add Python package modules:   failed, need a more thorough rewrite,   needs to start from a remote desktop environment</li> <li>[Medium] Add 'Be able to write simple Python scripts'   as the goal of the Python-only part:   I feel it is already present</li> <li>[Medium] Spend a bit more time on text editors:   no time</li> <li>[Low] Make the later material Good:   no time</li> <li>[Low] Assume variables are understood well enough:   no time</li> </ul>"},{"location":"lesson_plans/20251127/","title":"2025-11-27","text":""},{"location":"misc/exercise_procedure/","title":"Exercise procedure","text":"For teachers: why this setup? <p>Ideally, both learners have a camera and microphone on</p> <p>This allows for a learning environment that is engaging and where discussion can take place easily.</p> <p>You will be put into Zoom Breakout rooms, in random pairs.</p> <p>This assures everyone learns effectively: pairs are optimal.</p> <p>Ideally, all do the exercises on their computer, yet derive at a shared answer</p> <p>This assures everyone can give a answer that is not personal.</p> <p>One should commonly share screens</p> <p>Encourage teaching and learning.</p> <p>There is no silent room.</p> <p>There is no silent room, as:</p> <ul> <li>(1) working in pairs allows 'Think, Pair, Share' to work;   answering is not personal anymore,</li> <li>(2) getting the experienced learners to teach makes them learn too,</li> <li>(3) this does not work well with Zoom assigning random pairs,</li> <li>(4) this is not designed to be a self-study course</li> </ul> <p>When done with the exercises, go back to the main room</p> <p>This helps set the pace of the course.</p> <p>Learners that are done will be asked to try to help the remaining working learners, by joining their breakout rooms</p> <p>This helps wisdom to spread.</p> <p>The majority of learners is keen to help out directly.</p> <p>The majority of the remaining learners feel not knowledgeable enough to help out, but is keen to try to help out. Remind these learners they are here to learn, and not to already know to content.</p> <p>When two-thirds of the learners are in the main room, all break-out rooms will be closed ruthlessly</p> <p>The parameter value two-thirds is picked as it means that most learners have arrived at the answer. The hope is that the members of a slower pair in one iteration will catch up when paired up with other learners.</p> <p>Closing breakout rooms is not ultra-ruthless: learners still have 1 minute left. But it is a simple and ruthless rule.</p> <p>Breaks are always on the scheduled time. You will be reminded in that chat</p> <p>Breaks are important.</p> <p>Take that break, either in the main room or in your breakout room. The breakout rooms will not be closed</p> <p>Do not disrupt the flow (even more) by closing the breakout rooms.</p> <p>In the main room, random learners will be asked questions regarding those exercises. Say the answer you agreed upon as a group (i.e. not your personal answer!)</p> <p>This is form is described as 'Think, Pair, Share' in 'The Fundamentals of Teaching' by Mike Bell</p> For teachers: breakout room visit policy <p>The goal of visiting the breakout room, is to ensure there is a learning environment. Try to disturb as little as possible. Avoid to lecture and avoid to correct the learners, as this will make their learning less efficient.</p> <p>If learners are asking a question, coach the learners in finding the answer. Avoid giving a direct answer, as this will make their learning less efficient.</p> <pre><code>flowchart TD\n  question_asked[Learners ask a question?]\n  maybe_answer[Reply, maybe answer the question]\n  how_many_cameras[How many camaras are on?]\n  concentrated[Do the learners appear concentrated?]\n  discussion[Are the learners having a useful discussion?]\n  arguing[Are the learners arguing?]\n  chatting[Are the learners chatting informally?]\n  huh[Then what are they doing?]\n\n  fix[Re-establish learning environment]\n  next[Go to the next breakout room]\n\n  question_asked --&gt; |Yes| maybe_answer\n  question_asked --&gt; |No| how_many_cameras\n  maybe_answer --&gt; |Done| how_many_cameras\n  how_many_cameras --&gt; |Zero or one| next\n  how_many_cameras --&gt; |Two| concentrated\n  concentrated --&gt; |Yes| next\n  concentrated --&gt; |No| discussion\n  discussion --&gt; |Yes| next\n  discussion --&gt; |No| arguing\n  arguing --&gt; |Yes| fix\n  arguing --&gt; |No| chatting\n  chatting --&gt; |Yes| fix\n  chatting --&gt; |No| huh\n  fix --&gt; |Done| next</code></pre> <ul> <li>Ideally, both learners have a camera and microphone on</li> <li>You will be put into Zoom Breakout rooms, in random pairs.</li> <li>There is no silent room.</li> <li>Ideally, all do the exercises on their own computer,   yet derive at a shared answer</li> <li>One should commonly share screens</li> <li>Stuck? You can (1) wait for a teacher to come by,   (2) click on the Zoom option 'Ask for help', or   (3) go to the main room</li> <li>When done with the exercises, go back to the main room</li> <li>Learners that are done will be asked to try to help   the remaining working learners,   by joining their breakout rooms</li> <li>When two-thirds of the learners are in the main room, all break-out rooms   will be closed ruthlessly.   It may take 1 minute before the room closes though :-)</li> <li>Breaks are always on the scheduled time. You will be reminded in that chat</li> <li>Take that break, either in the main room or in your breakout room.   The breakout rooms will not be closed</li> <li>In the main room, random learners will be asked questions   regarding those exercises.   Say the answer you agreed upon as a group (i.e. not your personal answer!)</li> </ul> <pre><code>flowchart TD\n  subgraph breakout_room[Your initial breakout room]\n    do_exercise[Do exercises in group]\n    stuck[Wait\\nAsk for help\\nGo the main room]\n    do_exercise &lt;--&gt; |Stuck?| stuck\n  end\n  subgraph main_room[Main room]\n    get_exercise[Get exercises]\n    done_exercise[Done exercises]\n    most_done_exercise[Most have done exercises]\n    closing_breakout_rooms[Closing breakout rooms]\n    feedback[Feedback]\n  end\n  subgraph other_breakout_room[Another breakout room]\n    help_do_exercise[Help do exercises in group]\n  end\n\n  get_exercise --&gt; |clear?| do_exercise\n  do_exercise --&gt; |done!| done_exercise\n  do_exercise --&gt; |breakout rooms close| feedback\n  done_exercise --&gt; |help out| help_do_exercise\n  done_exercise --&gt; |wait| most_done_exercise\n  help_do_exercise --&gt; |done!| done_exercise\n  help_do_exercise --&gt; |breakout rooms close| feedback\n  most_done_exercise --&gt; |many learners in main room| closing_breakout_rooms\n  closing_breakout_rooms --&gt; feedback\n\n  breakout_room ~~~ main_room ~~~ other_breakout_room\n\n  get_exercise ~~~ help_do_exercise\n  do_exercise ~~~ help_do_exercise\n  help_do_exercise ~~~ most_done_exercise</code></pre> <p>Overview of the exercise procedure</p>"},{"location":"misc/exercise_procedure/#questions","title":"Questions","text":"<ul> <li>You are in a breakout room with someone else.   You both do not know what to do.   What went wrong?</li> </ul> Answer <p>Before you are sent to the breakout rooms, it is asked if you know what to do, with the goal of preventing this situation.</p> <p>Try to help the teacher give clear enough instructions next time.</p> <ul> <li>You are in a breakout room with someone else.   You need to install a piece of software,   which takes a couple of minutes of time.   Will you still have enough time for the exercises?</li> </ul> Answer <p>Likely: yes, you will have enough time for the exercises.</p> <p>It is likely you are not the only one that has this problem. The course follows the pace of the learners, hence, we move on to the next session when most learners have finished the exercises</p> <ul> <li>You finished the exercise and are in the main room,   waiting for the course to move on.   You were asked to help in another breakout room,   yet you did not feel comfortable to do so.   What do you do?</li> </ul> Answer <p>These are your options:</p> <ul> <li>Wait</li> <li>Ask questions</li> <li>Read the next session.   Turn of your camera to indicate you need to concentrate</li> </ul> <ul> <li>I am alone in my Zoom breakout room. What do I do?</li> </ul> Answer <p>It is likely a teacher will quickly see this and ruthlessly move you to another breakout room, so waiting is an option.</p> <p>Else, go to the main room.</p>"},{"location":"misc/project/","title":"Project","text":"<p>This is the NAISS code for the UPPMAX project of this course:</p> <pre><code>naiss2024-22-49\n</code></pre>"},{"location":"misc/test_admonitions/","title":"Admonition tests","text":"<p>This page is to test which admonition do and do not work, by showing all admonitions in the documentation:</p> My note <p><code>note</code></p> My seealso <p><code>seealso</code></p> My abstract <p><code>abstract</code></p> My tldr <p><code>tldr</code></p> My summary <p><code>summary</code></p> My info <p><code>info</code></p> My todo <p><code>todo</code></p> My tip <p><code>tip</code></p> My hint <p><code>hint</code></p> My important <p><code>important</code></p> My success <p><code>success</code></p> My check <p><code>check</code></p> My done <p><code>done</code></p> My question <p><code>question</code></p> My help <p><code>help</code></p> My faq <p><code>faq</code></p> My warning <p><code>warning</code></p> My caution <p><code>caution</code></p> My attention <p><code>attention</code></p> My failure <p><code>failure</code></p> My fail <p><code>fail</code></p> My missing <p><code>missing</code></p> My danger <p><code>danger</code></p> My error <p><code>error</code></p> My Bug <p><code>bug</code></p> My example <p><code>example</code></p> My quote <p><code>quote</code></p> My cite <p><code>cite</code></p>","tags":["test","admonitions"]},{"location":"misc/test_mermaid/","title":"<code>mermaid</code> tests","text":"<p>This page is to test if <code>mermaid</code> works.</p>","tags":["test","mermaid"]},{"location":"misc/test_mermaid/#gantt-chart","title":"Gantt chart","text":"<pre><code>gantt\n  title Lesson plan\n  dateFormat X\n  axisFormat %s\n  Prior : prior, 0, 10s\n  Present: present, after prior, 5s\n  Challenge: crit, challenge, after present, 20s\n  Feedback: feedback, after challenge, 10s</code></pre>","tags":["test","mermaid"]},{"location":"misc/test_mermaid/#flow-chart","title":"Flow chart","text":"<pre><code>flowchart TD\n\n  complete_text[Any text]\n  grep\n  filter[Filter]\n  filtered_text[The filtered text]\n\n  grep --&gt; |Regular expression| filter\n  complete_text --&gt; filter --&gt; filtered_text</code></pre>","tags":["test","mermaid"]},{"location":"prereqs/","title":"Prerequisites","text":"<p>Before the course, you must have done these five things:</p> <ul> <li>Prerequisite 1/5: You have registered at our registration form</li> <li>Prerequisite 2/5: You have registered at SUPR</li> <li>Prerequisite 3/5: You have access to this course's NAISS project</li> <li>Prerequisite 4/5: You are able to login to your HPC cluster</li> <li>Prerequisite 5/5: You have a good Zoom setup</li> </ul> Any questions about this? <ul> <li>See the 'Prerequisites' section of the Frequently Asked Questions page</li> </ul> How can I check this? <ul> <li>See the 'Prerequisites' section of the Frequently Asked Questions page</li> </ul> What if I have another question? <ul> <li>See the Frequently Asked Questions section</li> </ul>","tags":["prerequisites","requirements","preparation"]},{"location":"reflections/","title":"Reflections","text":"<p>Here are the reflections of this course:</p> No Date Reflections 1 2024-01-18 Reflection 2 2024-08-30 Reflection 3 2025-03-04 Reflection 4 2025-04-24 Reflection 5 2025-10-14 Reflection 6 2025-11-27 Reflection","tags":["reflections"]},{"location":"reflections/20240118/","title":"Reflection","text":"<ul> <li>Date of teaching: 2023-01-18</li> <li>Reflection date: 2023-01-18</li> <li>Teacher: Richel</li> <li>Lesson plan</li> <li>Evaluation</li> <li>Reflection</li> </ul>"},{"location":"reflections/20240118/#before-the-lesson","title":"Before the lesson","text":"<p>At the day of teaching, I was quite happy with my preparation: I put the book I used into teaching cycles of about a half or an hour.</p> <p>I was, however, quite nervous:</p> <p>fear for resistance against non-lecturing: from another course, I've seen that some learners expect a stock-standard course of lectures and exercises and will turn against me when I follow the best practices of the literature instead.</p> <p>fear for resistance against student-centered teaching: I felt that following the pace of the learners is The Right Thing To Do: if they work reasonably efficient, I should assume that the exercises made per time unit to be at their pace. However, would that feel too slow?</p> <p>fear for being underprepared for another course: I was in the process of preparing for another course, of which I -at the time of teaching- had 1 day left to prepare. I had a hard time falling asleep, which was not helpful.</p> <p>However, the evening before the lesson, I checked the literature if I would be able to defend the choices I made. Yes, I did.</p> <p>I was reading an edited volume on teaching and chapter 3 was called 'Building rapport'. One of the tips was to talk about yourself and your teaching style. I don't like to talk about myself (as knowledge about me is not part of the course), but I decided to try this out and made a presentation (see A1 for the content).</p>"},{"location":"reflections/20240118/#during-the-lesson","title":"During the lesson","text":"<p>I was in the Zoom room at around 8:30, which is 30 minutes on time. I tried to make some contact with the learners, without success. My day of teaching is the fourth of a series of lessons and I felt the learners asymptotically approached coming in at 8:59 at each successive day.</p> <p>I started at 9:00 sharp. I took the time for the learners to turn on a camera. I told the learners how I will behave differently with a camera on or off.</p> <p>I lectured the presentation about myself, which is the least important thing of the course, so some learners could connect their camera. About 80%-95% of around 33 learners had a camera on after finishing the presentation.</p> <p>I started the first teaching cycle: 'What do you think about when you think about Python?', were I randomly asked learners. They knew I would, as that was in the presentation about me already. I took care to bend most answers that show a learner is not perfect into something more mild.</p> <p>I took time to discuss the workflow of how to do an exercise in pairs. My favorite part in theory was the way I would determine to move to a next exercise: (1) all learners start in pairs, (2) when a pair is done, they go to the main room, after which they are distributed over other rooms, (3) when two thirds of the students is in the main room, I close the Breakout rooms ruthlessly: (a) the remaining pairs have another minutes left, (b) the remainders are likely to catch up in the next cycle. (4) when all learners are back, ask answers to individual students and give feedback on those answers.</p> <p>The Feedback phase felt slow to me: I asked one learner per question, asked him/her to share the screen and try to do reproduce the answer again. Still, I knew 'Feedback' is the 10th most impactful intervention, which made me follow the plan.</p> <p>After the Feedback, I usually connected what we just learned to earlier knowledge again, using concept maps and repeat concepts. Also here: I know this is important to do.</p> <p>While the learners did their exercises, there was a lot of waiting for me. I needed to be in the main room, so I could move people around: sometimes, people would not go to a breakout room (for example, because they were not behind a computer at that time) or had a computer reboot or had multiple logins (e.g. a computer to share screen and a phone to share camera). Also, I sent the helpers to go through the rooms, due to which I had even less to do. It was quite dull for me. I did not want to do something else, to maintain focus.</p> <p>I commonly, but not always, instructed the helpers to do something like this: 'Go through rooms x to y to observe (1) the atmosphere of the room, (2) if the learners know what to do. Do not lecture the learners'. I am unsure if all helpers understood and I cannot check that either. Maybe next time ask:</p> <ul> <li>Q: What is the purpose of visiting the breakout rooms?</li> <li>A: To check if the learners can work and do so in a welcoming way</li> <li>Q: If, in a breakout room, the learners appear to be concentrated,   what do you do?</li> <li>A: Do not disturb and move to the next breakout room:   you've seen they can work</li> <li>Q: If, in a breakout room, two learners are discussing something.   They, however, have reached a wrong conclusion. What do you do?</li> <li>A: Do not disturb and move to the next breakout room:   you've seen they can work</li> <li>Q: If, in a breakout room, two learners have an unfriendly argument,   what do you do?</li> <li>A: Do something about this. This is up to you.   Either handle this yourself or ask me to take care of it. Always let me know</li> <li>Q: If, in a breakout room, two learners are discussing Pokemon,   what do you do?</li> <li>A: Do something about this to set them back to work in a friendly way</li> <li>Q: If, in a breakout room, only one learner has no camera, what do you do?</li> <li>A: Do not disturb and move to the next breakout room:   you have no evidence they cannot work</li> <li>Q: If, in a breakout room, both learners have no camera, what do you do?</li> <li>A: Do not disturb and move to the next breakout room:   you have no evidence they cannot work</li> <li>Q: If, in a breakout room, one or both learners ask a question to you.   What do you do?</li> <li>A: Determine if you should answer: have they discussed together already?   If yes, help them arrive at finding the right answer.   Only give a direct answer as a last option</li> </ul> <p>While the learners did their exercises, twice I went through all the breakout rooms anyways. I felt blind and the need to sample at least once or twice. I took care to go in each room with a neutral expression, say nothing, and leave with a visible thumbs up. Only rarely did I get questions. The questions were relevant to fix. I've seen mostly learners that were reading/programming in deep focus, or sharing a screen and talking.</p> <p>I followed the break schedule loyally, even when a break happened in the middle of an exercise. I already stated to the learners I would do that, as breaks are important.</p> <p>During the day, we did around 5 teaching cycles.</p> <p>I shortened the Challenge (i.e. exercise) about find the right UPPMAX module for a Python package: it is hard to get right and is more UPPMAX than Python (and Python is at the focus of this day). I told the learners why and showed them the YouTube video and encouraged them to watch it later: I wanted to move on to the next session.</p> <p>There was some dead space when 10 learners where in the main room, when all groups already have 1 extra helper, waiting for a remaining trio to finish. I told I would not to discuss the answer yet, but am open to any other questions. Some learners had some Python or UPPMAX questions, sometimes I asked for feedback about the book and its exercises.</p> <p>At 15:55 I interrupted the last cycle to repeat what we did and look at the course material that is also there. In the last minute, I thanked the group for being great to work with.</p> <p>At 16:00 sharp the learners left and I had a meeting with one of them: he is involved in teaching and I wanted to discuss teaching as colleagues. He stayed, Pavlin stayed too and we discussed teaching and mostly got feedback (see A2 below). Pavlin discovered that Zoom's random shuffle algorithm puts people with cameras in the first rooms! He discovered that due to this, there is a huge difference between the atmosphere in room 1 and 16: room 1 was the most fun, room 16 was colder. Pavlin felt the learners were having fun and being productive at the same time.</p> <p>At around 16:15 the day was over.</p> <p>I think the day was efficient and I feel most of the credits must go to the cooperative learners. On the other hand, I did plan to make it likely to get them to cooperate :-)</p>"},{"location":"reflections/20240118/#possible-improvements","title":"Possible improvements","text":"<p>[DONE] Split up the exercises for the block 'Variables, expressions and statement' in different pages: I intended to cut that up in three teaching cycles, as can be seen in the schedule. However, this ended up in one, because the exercises for these three cycles were on the one same page. I will split that up in three pages for next time.</p> <p>Learners will heavily depend on a camera. Consider making this more explicit in the advertising of the course. Also: encourage camera usage in earlier days of the course.</p> <p>Consider being more clear to helpers what is the idea behind the lesson setup: they are likely to expect classic lecturing. Make a flow-chart on what to do in a group room.</p>"},{"location":"reflections/20240118/#future","title":"Future","text":"<p>I hope next iteration, I am allowed to teach this course again with the same setup, to build up confidence in the positive effect of the setup.</p>"},{"location":"reflections/20240118/#appendix","title":"Appendix","text":""},{"location":"reflections/20240118/#a1-presentation-about-myself","title":"A1. Presentation about myself","text":"<pre><code># Who is Rich\u00e8l?\n\n&lt;https://github.com/UPPMAX/naiss_intro_python/tree/main/lesson_plans/20240118&gt;\n![](CC-BY-NC-SA.png)\n\n## How to pronounce my name\n\nLanguage  | Pronounciation \n----------|----------------\n**Dutch** | 'Rie-sjel'     \nEnglish   | 'Rea-shell'    \nFrench    | 'Rich\u00e8l'       \nGerman    | 'Ri-sh\u00e4ll'     \nSwedish   | 'Ri-kjell'     \n\n## Teaching\n\n-   2007-2008 MSc: Teaching in Pre-higher education in Biology\n-   Oct 2008-Aug 2010: 0.6 FTE teacher and team leader, 12-18 yo\n-   Jan 2014-Jan 2021: coordinator of multiple courses, as volunteer, 8-18 yo\n-   Sep 2022-now: coordinator of multiple courses, as volunteer, 8-18 yo\n-   Sep 2019-now: team leader of programming team, 13-38 yo\n-   Mar 2023-now: teacher at UPPMAX, 18-88 yo\n\n## Teaching style\n\n-   Literate\n-   Evidence-based, e.g. @hattie2012visible, @schwartz2012evidence\n-   Active learning\n-   Learning community\n-   Well-prepared\n-   Student-centered\n-   Transparent\n\n## Features\n\n-   Every learner needs to be active\n-   Follows the pace of learners that need more time \n-   Fast learners help\n-   Asks learners randomly @bell2020fundamentals\n-   Dare to try out new things (and fail in plain sight) @bell2020fundamentals\n\n## Lecturing\n\nI only do this for unimportant topics.\n\nThis was the only lecture in the course :-)\n\n(I **do** need to tell about myself @schwartz2012evidence)\n</code></pre>"},{"location":"reflections/20240118/#a2-feedback","title":"A2. Feedback","text":"<pre><code>I had some questions, for example 'What is the interactive node \ngoing to do with my output?'. It is great that we practiced this!\n\nIf no video, the teacher cannot see when learners are lost:\ngreat idea to turn cameras on for that too!\n\n - Day 1: \n    - Should be more hands-on\n    - Low tempo \n    - More conceptual than technical\n    - Move some Day 2 content to Day 1, to be more hands-on\n - Day 2: \n    - Great! \n    - Prefer less in-depth\n    - If no experience with Linux, it is hard to keep up.\n - Day 3: \n   - Douglas: see Day 2\n   - Diana: \n     - Good day, yet the focus was more on Linux,\n       then making the learners think and be active learners.\n     - Less content, e.g only Slurms things that are most important, less Linux flags\n - Day 4:\n   - lovely\n   - fresh\n   - kept audience awake\n   - As a learner, you do not want to be berated when giving an answer. \n     Richel tries to gently deal with a wrong answer and he does this great\n   - cameras on is great: else learners feel alone\n   - in a gentle way, Richel makes people feel that this is serious:\n     there is a schedule, there are exercises and we are going to do it!\n   - breaks are great: two hours, 1.5 hours is tough!\n   - interrupting an exercise for a break is fine\n</code></pre>"},{"location":"reflections/20240830/","title":"Reflection","text":"<ul> <li>The learners were nearly twice as fast than the cohort of 2024-01-18:</li> </ul> Time Start of section 09:30 1. Use the Python script' 09:50 2. Way of the program' 10:15 3. Working with Python scripts' 10:45 4. VET 1: variables 11:30 5. VET 2: operators 13:15 6. VET 3: user input 13:45 7. Hello little turtle 14:30 8. File I/O ? 9. Command-line arguments ? 10. Graphics ? Functions -&gt; no, send home! <p>This makes me wonder: can I stop earlier with them?</p> <ul> <li>Pro: reward for working hard</li> <li>Con: they expect a full day of work, I can give them a learning   environment the full day</li> </ul> <p>I feel that functions can be skipped, as there we leave the domain of an intro course.</p> <ul> <li>[x] Weak prior of exercise VET 2: operators<ul> <li>[x] Add better ones to course material</li> <li>[x] I already did so, I just forgot to <code>git push</code></li> </ul> </li> <li>I feel there are too much splits in the sessions.   Should I clump those together yes/no?   Let's see if this comes up at the evaluation!</li> </ul> <p>I made the learners start evaluating at 15:15, as I saw they could not learn effectively anymore. I think that this shows I've made the (lack of even more) learning visible.</p>"},{"location":"reflections/20250304/","title":"Reflection","text":"<ul> <li>Lesson plan</li> <li>Evaluation results</li> <li>Reflection</li> <li>Number of registrations: 63</li> <li>Number of learners: 32 learners (50% show-up rate)</li> </ul>"},{"location":"reflections/20250304/#schedule","title":"Schedule","text":"Time Topic 09:00-10:00 Using the Python interpreter 10:00-10:15 Break 10:15-11:00 The way of the program 11:00-11:15 Break 11:15-12:00 Working with Python scripts 12:00-13:00 Break 13:00-14:00 Variables, expressions and statements: variables 14:00-14:15 Break 14:15-15:00 Variables, expressions and statements: operators 15:00-15:15 Break 15:15-15:45 Variables, expressions and statements: user input 15:45-16:00 Evaluation <ul> <li>[NO] Modules and Python packages</li> <li>File IO</li> <li>[NO] Command line arguments</li> <li>[NO] Graphics</li> <li>[NO] Functions</li> </ul>"},{"location":"reflections/20250304/#reflection-before-looking-at-evaluation-results","title":"Reflection before looking at evaluation results","text":"<p>The day went reasonably well, with some sloppinesses:</p> <ul> <li>Forgot to tell what to do when done</li> </ul> <p>Even though I thought I prepared well, this is work needed:</p> <ul> <li>Make 'Modules and Python packages'   NAISS wide</li> <li>Improve 'Command line arguments'</li> <li>Improve 'Graphics'</li> <li>Improve 'Functions'</li> </ul> <p>These sessions should be merged:</p> <ul> <li>Merge 'The way of the program'   and 'Working with Python scripts'</li> <li>Merge 'Variables, expressions and statements: operators'   and 'Variables, expressions and statements: user input'</li> </ul> <p>This day, I was helped by a colleague. This seemed useful in the first hour, as there were many unknowns. At the first break, however, the dust had already settled and I let the colleague go back to work again.</p> <p>Half of the registered learners showed up</p> <p>There were 63 registrations, of which 2 are cancellations done by email. In the first hour, there were 32 learners, hence around 50% of the registrations showed up.</p> <p>Half of the learners showing up had access to a NAISS cluster</p> <p>In the first hour, a third of the learners dropped out: they had no access to a NAISS cluster after all. From the remaining learners, around 8 out of around 24 had no access either, yet used a local Python instead. This means that 1/3 + (1/4 * 2/3) = 50% did not have access to a NAISS cluster.</p> <p>Due to the sloppy course material ('It is not worth your time'), I started the evaluation at 14:45 already and at 15:10 all learners were gone. I think this is the right reaction and next time, I will make sure the rest of the course material is at the same level of quality. No idea how I missed that!</p> <p>I think the Mermaid graphs are more in the way, as opposed to being helpful. Remove these</p> <ul> <li>[ ] Remove the mermaid plots</li> </ul> <p>I enjoyed working with the group. I was surprised again, how eager most learners are when helping each other.</p> <p>I'd rate this day a narrow pass: the teaching itself was reasonable, yet the course materials were not ready.</p>"},{"location":"reflections/20250304/#after-evaluations","title":"After evaluations","text":"<p>Let's look for the weakest session:</p> question mean reflection I am comfortable using the Python book 4.2667 . I am comfortable using the documentation of my HPC center 4 . I can convert a simple equation to Python code 4.2667 . I can convert a simple text question to Python code 4.066 . I can create a Python script 4.33 . I can load a Python version on my HPC cluster 4.33 . I can login to my HPC cluster 4.4667 . I can run a Python script 4.4 . I can use a text editor on my HPC cluster 4.2667 . In Python, I can ask a user for input 3.93 . In Python, I can create a file 3.93 . In Python, I can create a variable 4.53 . In Python, I can find and use the operator for exponentiation 4.53 . In Python, I can use a variable 4.53 . In Python, I know what the modulo operator is and when to use it 4.2 . In Python, I can read a file 3.8 . In Python, I can use user input in a calculation 3.8 . I can describe what the Python programming language is 3.8 . I am comfortable learning Python 3.8 This is my teaching score I can describe what the Python interpreter is 3.734 Maybe add a picture here I can describe what a program is 3.6 Weakest learning objective. It can be removed . . . In Python, I can use command-line arguments 1.4 Agree: was not taught In Python, I can write a function that requires an argument 1.06667 Agree: was not taught In Python, I can write a function with a return value 1.333 Agree: was not taught In Python, I can write a function without an argument and without a return type 0.86667 Agree: was not taught I can find and use a Python module on Rackham 1.66667 Agree: was not taught In Python, I can write a function that calls a function 1 Agree: was not taught In Python, I can import the matplotlib library 1.2 Agree: was not taught In Python, I can use a for loop 1.8 Agree: was not taught <ul> <li>My teaching score is the confidence for 'I am comfortable learning Python',   which is 3.8 out of 5, is 7.2 out of 10. A 7.2 for me it is!</li> <li>The weakest session is 'I can describe what a program is': I removed   it, as it is not important.</li> <li> <p>After that, the outcome 'I can describe what the Python interpreter is' is   next but lowest: I need to create an image somewhere :-)</p> </li> <li> <p>[ ] Add an image to show what an interpreter does</p> </li> </ul> <p>Texts:</p> <ul> <li>I have been following during the morning only.   It was very nicely arranged,   and I have appreciated the interactive exercise solving sessions   (despite not having camera and mic).   I will go on studying python from the book on the website!</li> </ul> <p>This is great to hear! I am happy to hear that using a book is appreciated by the learners.</p> <ul> <li>I thought i fulfilled the prerequisites but i apparently [didn't].   I thought the NAISS SUPR account was the account needed but it [wasn't].   I could therefore not participate in the course.   It would be nice if the prerequisites was formulated more clearly.</li> </ul> <p>This is unfortunate. I think it was clearly described and I would describe this more prominently if I would continue the course like this. However, the course will change, with a SNIC project being used by all learners. Let's hope next time such feedback can be avoided :-)</p> <ul> <li>I would have been happy to continue during the last hour as well!</li> <li>It would have been fun to do the remaining pages as well,   or at least one more as we had another hour.</li> </ul> <p>I am happy to see the learners wanted more. But the material was not up to par with my quality standards. It would have been a gamble to continue. In any case, next course iteration, I make sure all is up to par, so to avoid this feedback in the future :-)</p> <ul> <li>The instructor is great, motivated, and interactive,   which makes sure each participant understand each step.   For me, the best part of this course was to let me practice [HPC]   and run simply code. This practice removed the fear to start using [HPC].   I was afraid if I do something wrong while I am logging into [HPC]   and mess up there.   I absolutely recommend others to take this course if they have not.</li> </ul> <p>Wow, that is great to hear!</p> <ul> <li>Could you suggest a resource for further learning?</li> </ul> <p>I agree with this feedback. I abruptly ended the course, without providing this. I will deliver next course iteration :-)</p> <ul> <li> <p>[ ] Add a 'Further learning' session</p> </li> <li> <p>I do not feel like we have learned to do what is mentioned in the 7 last   questions, but I suppose I will be able to find out how to do those.</p> </li> </ul> <p>This is correct: the course material there is not up to par with my quality standards yet.</p> <ul> <li>Really nice intro to Python!   Richel\u00b4s teaching style is very interactive and open,   there is no need to feel scared to ask questions or give wrong answers.   I like the breakout rooms, since it gives the possibility to engage   more with other learners, and help each other out.   The course is adjusted to the speed of the participants,   so no one is rushed during the exercises.   I think it's a good idea to base the course on a book,   so we can keep on learning more in our own time afterwards,   especially since the book includes exercises.  </li> </ul> <p>Yay!</p> <ul> <li>I really enjoyed this course.   I particularly enjoyed how interactive it is,   and how Richel was able to put everyone at ease and   create the perfect environment for interactions.   Even though some of the material was maybe a bit too basic   for my level of knowledge,   the questions asked by Richel are a perfect way to get everyone   to think more in depth about their knowledge,   and reflect on how you could explain those concepts to someone   else if you ever find yourself in that situation.   I would have appreciated it if the course went slightly further   into the introduction to python,   but on the other end I do feel confident that   I can do it on my own now.   Thank you for the great work.</li> </ul> <p>Lovely to hear this!</p>"},{"location":"reflections/20250304/#email","title":"Email","text":"<p>An email I got afterwards:</p> <pre><code>Dear Richel,\n\nThanks for the wonderful course. I, unfortunately,\nhave to attend another meeting in the later half of the day\nand cannot continue to attend the course session.\nI will fill out the evaluation form.\n\nThank you and best wishes, \n[name of learner]\n</code></pre> <p>Thanks!</p>"},{"location":"reflections/20250304/#success-score","title":"Success score","text":"<p>Per request of NAISS, I've added a number: the success score, which is the average confidence in the learning outcomes. Treat with caution <code>[Fenwick, 2001]</code>!</p>"},{"location":"reflections/20250304/#references","title":"References","text":"<ul> <li><code>[Fenwick, 2001]</code> Fenwick, Tara J.   \"Using Student Outcomes to Evaluate Teaching: A Cautious Exploration.\"   New Directions for Teaching &amp; Learning 2001.88 (2001).</li> </ul>"},{"location":"reflections/20250424/","title":"Reflection","text":"<ul> <li>Lesson plan</li> <li>Evaluation results</li> <li>Reflection</li> </ul>"},{"location":"reflections/20250424/#reflection-before-looking-at-evaluation-results","title":"Reflection before looking at evaluation results","text":"<p>I enjoyed working with this group. It was a high pace. We were productive. We even had some fun.</p> <p>I had one colleague that I said to treat as a regular learner, but I failed: I did treat him like something between TA and learner. At the end of the day (see below), we discussed this. We both failed and agreed: I treated him as an in-between learner-and-TA, and he behaved as an in-between learner-and-TA. We also agreed that this was the right call.</p> <p>I missed being helped the first hour, although there were some colleagues available. I did not ask for help, because I felt I had talked too much: it was at 9:17 that we started doing exercises. At 9:17, I could have set them to work, but I did not feel the need either. Next time, encourage them to be absent. Sure, they are always welcome, but I will manage :-)</p> <ul> <li>[ ] Encourage colleagues to be absent</li> </ul> <p>One group of 3 ended up in, indeed, 2 people being active and 1 being passive. I have seen this. So I looked for a group that the passive learner would fit into, but could not find such a group. One reason is that I did not know which HPC cluster the learner used.</p> <ul> <li>[ ] Let learners add the cluster name to their Zoom name,   else write it down</li> </ul> <p>I cannot keep up a full day. And I think that helps us understand what the learners feel. But, I did feel uncomfortable with my later material</p> <ul> <li>[ ] Make the later material Good</li> </ul> <p>I let them go earlier, as this was the fastest group ever.</p> <ul> <li>[ ] Add more material, see below</li> </ul> <p>I should add more HPC, i.e. using Python package modules: the course felt too Python-heavy. I am not against being Python-heavy, but the course is called 'NAISS Intro to Python', implying the use for HPC.</p> <ul> <li>[ ] Show better when HPC is done and Python-only starts</li> </ul> <p>For the material, I feel I should add if-statements and for-loops: those are more basic concepts. Also, I feel I should remove function, as this is beyond the scope of the Python in this course (i.e. 'Be able to write simple Python scripts').</p> <ul> <li>[ ] Add 'Be able to write simple Python scripts' as the goal   of the Python-only part</li> </ul> <p>I had the idea to, for next time, add the HPC cluster name behind everyone's name, e.g. <code>Richel (Rackham)</code>. I already (the day after) did this: learners can change their name themselves.</p> <ul> <li> <p>[ ] Let the learners change their name to add their HPC   cluster</p> </li> <li> <p>[ ] Add Python package modules</p> </li> </ul>"},{"location":"reflections/20250424/#feedback-linus","title":"Feedback Linus","text":"<ul> <li> <p>What went well?</p> <ul> <li>All students went through all of the important things<ul> <li>RB: definitely!</li> </ul> </li> <li>Sending more advanced Python students home was a good thing;   they came there for the HPC part<ul> <li>RB: agree</li> </ul> </li> <li>Exercises and material is very good</li> </ul> </li> <li> <p>What are features of the course?</p> <ul> <li>Some learners get lost in the book (it's a good book),   doing exercises on their own</li> </ul> </li> <li> <p>What could be improved?</p> <ul> <li>Students that already know Python could be sent back home earlier<ul> <li>RB: agree, at 11:00 we could let the first people go :-)</li> </ul> </li> <li>Some learners do the exercises in the book and then forget about   the course material.<ul> <li>RB: agree: remove the mention of the exercises in the book   and sent them to the exercises in the course material (only)</li> </ul> </li> </ul> </li> </ul>"},{"location":"reflections/20250424/#evaluation-results","title":"Evaluation results","text":"<ul> <li>stats.md</li> </ul> <p>Conclusions:</p> <ul> <li>From statistics: assume variables are understood well enough</li> <li>From confidences: spend a bit more time on text editors</li> </ul>"},{"location":"reflections/20251014/","title":"2025-10-14","text":"<ul> <li>Lesson plan</li> <li>Evaluation</li> <li>Reflection</li> </ul>"},{"location":"reflections/20251014/#before-teaching","title":"Before teaching","text":"<p>When I started sending out the emails (at 'Communication'), I received 3 cancellations. I wonder how this number compares to other courses and/or how it compares to emails that are less welcoming.</p> <p>The 'Hello little turtles' session took me too much time to get to get to work. After one hour, I think it is better if this session starts in a remote desktop environment (ignoring X forwarding).</p> <ul> <li>[ ] Schedule at 4 hours to fix 'Hello little turtles'</li> <li>[ ] Consider to do so for 'Graphics' instead</li> <li>[ ] Add one of these to the morning sessions schedule</li> <li>[ ] Update goal: to be able to run a Python script on an HPC cluster,   that runs a graphical library</li> </ul>"},{"location":"reflections/20251014/#morning-session","title":"Morning session","text":"<p>I clearly marked the two different parts of the day. This part had a clear end goal: to be able to run a Python script on an HPC cluster.</p> <p>I did feel there were too many Priors in it.</p> <ul> <li>[x] Remove the parts about the 3 types of bugs</li> </ul> <p>With a clear end goal in mind, I sent the faster workers back earlier.</p> <ul> <li>[ ] Make more explicit: when done, we go home. When working together,   we will go home sooner</li> </ul> <p>I enjoyed working with this group.</p>"},{"location":"reflections/20251014/#afternoon-session","title":"Afternoon session","text":"<p>This session had a goal, but it could have been clearer: to be able to read/write a variable from/to a file.</p> <ul> <li>[ ] Make goal of second half clearer:   to be able to read/write a variable from/to a file</li> </ul> <p>Also, the session was too cut up.</p> <ul> <li>[ ] Merge sessions 'Variables, expressions and statements'   into 1 page</li> </ul> <p>Also, there were useless intermediate goals.</p> <ul> <li>[x] Remove useless intermediate goals</li> </ul> <p>Also, there were mentions of HPC cluster doc.</p> <ul> <li>[x] Remove needless mentions of HPC cluster doc in the LOs</li> </ul> <p>Also, TOCs of pages were too deep: make exercises of type header 2.</p> <ul> <li>[x] make exercises of type header 2</li> </ul> <p>In this part of the day, I sent learners back home earlier. It felt OK.</p> <p>I enjoyed working with this group, including the new additions: they blended in well.</p> <p>The end of my day was weak: I was mentally exhausted.</p>"},{"location":"reflections/20251014/#learning-outcomes","title":"Learning outcomes","text":"<ul> <li> <p>[x] Remove 'I can login to my HPC cluster' as this is a prerequisite</p> </li> <li> <p>[x] Remove 'I can describe what the Python programming language is',   as this is untested</p> </li> </ul> <p></p> <p></p> <p></p> <p></p> <p></p> question mean_pre mean_post p_value different I am comfortable using the documentation of my HPC center 2.727273 4.500000 0.0099316 TRUE I am comfortable using a Python book 2.181818 4.666667 0.0048339 TRUE I am comfortable learning Python 3.272727 4.833333 0.0039403 TRUE I can login to my HPC cluster 4.000000 5.000000 0.0197055 TRUE I can load a Python version on my HPC cluster 2.818182 5.000000 0.0045775 TRUE I can describe what the Python programming language is 2.181818 4.000000 0.0268995 TRUE I can describe what the Python interpreter is 1.636364 4.000000 0.0065500 TRUE I can use a text editor on my HPC cluster 2.909091 5.000000 0.0046626 TRUE I can create a Python script 2.090909 4.833333 0.0074328 TRUE I can run a Python script 2.636364 5.000000 0.0045213 TRUE In Python, I can create a variable 2.000000 5.000000 0.0046912 TRUE In Python, I can use a variable 2.000000 5.000000 0.0019569 TRUE I can convert a simple equation to Python code 1.909091 5.000000 0.0019982 TRUE In Python, I can find and use the operator for exponentiation 1.272727 5.000000 0.0016461 TRUE In Python, I know what the modulo operator is and when to use it 1.181818 5.000000 0.0016461 TRUE I can convert a simple text question to Python code 1.181818 4.500000 0.0011858 TRUE <p>Blimey, all things went up significantly!</p>"},{"location":"reflections/20251014/#feedback","title":"Feedback","text":"<ul> <li>Very well designed and beginner friendly training!</li> <li>A very nice basic Python course for beginners   who want to start using Python on HPC.   The course website is very informative and tidy. Thanks a lot!</li> <li>On the whole I feel the course was good, just not on the right level for me.   However, the materials for the 4-day course   (https://uppmax.github.io/HPC-python/index.html)   led me to some more advanced stuff: automatic code optimization with Numba,   and indirectly to automatic parallelization with DECO.</li> </ul> <p>Agree: it is a beginners course. It should be made more explicit:</p> <ul> <li>[ ] Put in non-goals: 'do complex Python'</li> <li> <p>[ ] Refer to HPC Python course more</p> </li> <li> <p>Very nice course for the Python beginner!</p> </li> <li>Great course, beginner-friendly!</li> <li>Overall, it was a good course for complete beginners.   However, it would have been nicer to have more discussion   and less independent reading.   Much of the material from the Python book could have been replaced   by direct (faster) explanations from the instructor,   followed by group discussions and more strictly collaborative exercises.   This approach would likely have led to faster and more effective learning.</li> </ul> <p>I am happy to hear a fellow teacher here. I am unsure if this is true, as reading is active learning, where listening is not. Sure, a discussion is active too and we indeed did not have many. Making the exercises 'strictly collaborative' seems like an interesting idea.</p> <p>All in all: I wish I could talk with him/her about this.</p> <ul> <li> <p>[ ] Think on how to implement this</p> </li> <li> <p>Since there are already plenty of Python tutorials available online,   a course like this should focus on being more interactive rather   than being a space where to work independently through existing materials.   I also would have appreciated covering some more essential   yet slightly advanced topics\u2014such as functions, available python packages,   and similar concepts\u2014instead of spending as much time on very basic material,   like simple arithmetic with operators.</p> </li> </ul> <p>Another fellow teacher! Also here: make the exercises more collaborative. I also see some ideas here, such as using the book to write simple programs. Also here: I wish I could talk with him/her about this.</p> <ul> <li>[ ] Think on how to implement to make exercises more collaborative,   e.g. let them write their own code (as a group) based on the book?</li> </ul> <p>Fun!</p>"},{"location":"reflections/20251014/#conclusion","title":"Conclusion","text":"<p>The course was appreciated as a beginner course and criticized for being to non-collaborative. I agree that there is room for improvement there!</p> <p>I would rate my own teaching a 7 out of 10, as the end was weak.</p>"},{"location":"reflections/20251127/","title":"2025-11-27","text":""},{"location":"sessions/command_line_arguments/","title":"Command-line arguments","text":"<p>Learning outcomes</p> <ul> <li>Can read the command-line arguments</li> <li>Can run a Python script with command-line arguments</li> </ul> For teachers <p>Teaching goals are:</p> <ul> <li>Learners have used sys.args</li> <li>Learners have run a Python script with command-line arguments</li> </ul> <p>Lesson plan:</p> <ul> <li>5 mins: prior knowledge</li> <li>5 mins: presentation</li> <li>15 mins: challenge</li> <li>5 mins: feedback</li> </ul> <p>Prior:</p> <ul> <li>What are command-line arguments?</li> <li>What is meant with 'a command-line interface'?</li> <li>Why use command-line arguments?</li> </ul>"},{"location":"sessions/command_line_arguments/#overview","title":"Overview","text":"<p>Sometime, also programs need input, for example the name of the input file and the name of a results file:</p> <pre><code>python my_input.csv my_results.csv\n</code></pre> <p>Sometime you need to get 'stuff to work', for example, code written by someone else. In this session, we practice this, going through the problems and errors that occur when you want to 'just want to run the stupid code'.</p>"},{"location":"sessions/command_line_arguments/#exercises","title":"Exercises","text":""},{"location":"sessions/command_line_arguments/#exercise-1-read-the-command-line-arguments","title":"Exercise 1: Read the command-line arguments","text":"<p>Read the official Python documentation about <code>sys.argv</code>.</p> <p>Create a script with the following text:</p> read_argv.py<pre><code>import sys\n\nprint(sys.argv)\n</code></pre> <p>Run the Python script as shown below. What does it print?</p> <ul> <li><code>python read_argv.py</code></li> </ul> Answer <pre><code>['read_argv.py']\n</code></pre> <p>Run the Python script as shown below. What does it print?</p> <ul> <li> <p><code>python read_argv.py hello world</code></p> <pre><code>['read_argv.py', 'hello', 'world']\n</code></pre> </li> </ul> <p>Run the Python script as shown below. What does it print?</p> <ul> <li> <p><code>python read_argv.py \"hello world\"</code></p> <pre><code>['read_argv.py', 'hello world']\n</code></pre> </li> </ul> <p>Run the Python script as shown below. What does it print?</p> <ul> <li> <p><code>python read_argv.py 'hello world'</code></p> <pre><code>['read_argv.py', 'hello world']\n</code></pre> </li> </ul>"},{"location":"sessions/command_line_arguments/#exercise-2-read-a-command-line-argument","title":"Exercise 2: Read a command-line argument","text":"<p><code>sys.argv</code> is a list. Here we use this list</p> <p>Read the following sections of How to Think Like a Computer Scientist: Learning with Python 3:</p> <ul> <li><code>11. Lists</code></li> <li><code>11.1. List values</code></li> <li><code>11.2. Accessing elements</code></li> </ul> <p>Modify the script in such a way that the script will only show the first command-line argument.</p> <p>For example, running the script like this:</p> <pre><code>python read_argv.py hello world\n</code></pre> <p>it should show <code>hello</code>.</p>"},{"location":"sessions/command_line_arguments/#exercise-3-work-with-a-command-line-argument","title":"Exercise 3: Work with a command-line argument","text":"<p>Learning outcomes</p> <ul> <li>Do a first string comparison</li> </ul> <p>Read the following sections of How to Think Like a Computer Scientist: Learning with Python 3:</p> <ul> <li>8.7. String comparison</li> </ul> <p>Now, we make the script produce different output.</p> <p>If the script is run like this:</p> <pre><code>python read_argv.py hello\n</code></pre> <p>it should show <code>Hello human!</code>.</p> <p>If the script is run like this:</p> <pre><code>python read_argv.py bye\n</code></pre> <p>it should show <code>Sad to see you go human!</code>.</p> <p>Write the script to do that.</p>"},{"location":"sessions/command_line_arguments/#links","title":"Links","text":"<ul> <li>How to Think Like a Computer Scientist: Learning with Python 3</li> </ul>"},{"location":"sessions/files/","title":"Files","text":"<p>Learning outcomes</p> <ul> <li>Have read a file</li> <li>Have created a file</li> </ul> For teachers <p>Teaching goals are:</p> <ul> <li>Learners have read a file</li> <li>Learners have created a file</li> </ul> <p>Lesson plan:</p> <ul> <li>5 mins: prior knowledge</li> <li>5 mins: presentation</li> <li>15 mins: challenge</li> <li>5 mins: feedback</li> </ul> <p>Prior:</p> <ul> <li>What is file I/O?</li> <li>What are some problems you can have when reading a file?</li> <li>What are some problems you can have when creating a file?</li> </ul>"},{"location":"sessions/files/#overview","title":"Overview","text":"<p>Most programmers need to work on data and produce some result. In Python, we -of course- can read from files and write to files. Here we do just that.</p>"},{"location":"sessions/files/#exercises","title":"Exercises","text":""},{"location":"sessions/files/#exercise-1-create-a-simple-text-file","title":"Exercise 1: create a simple text file","text":"<p>Read the following sections of How to Think Like a Computer Scientist: Learning with Python 3:</p> <ul> <li>13.1. About files</li> <li>13.2. Writing our first file</li> </ul> <p>Then do:</p> <ul> <li>Put the code at the top of 13.2 in a Python script</li> <li>Run that code</li> <li>Verify that it works as expected</li> </ul>"},{"location":"sessions/files/#exercise-2-read-and-create-a-simple-text-file","title":"Exercise 2: read and create a simple text file","text":"<p>Read the following sections of How to Think Like a Computer Scientist: Learning with Python 3:</p> <ul> <li>13.4. Turning a file into a list of lines</li> </ul> <p>Consider searching for 'Python reverse order', as you will need to do this in the exercise.</p> <p>Then do:</p> <ul> <li>Exercise 13.11.1</li> </ul> <p>13.11.1</p> <p>Create a script that reads a file and writes out a new file with the lines in reversed order (i.e. the first line in the old file becomes the last one in the new file.)</p> Answer <p>The new thing is to use <code>reversed</code>:</p> <pre><code>f = open(\"friends.txt\", \"r\")\nxs = f.readlines()\nf.close()\n\nxs = reversed(xs)\n\ng = open(\"sortedfriends.txt\", \"w\")\nfor v in xs:\n    g.write(v)\ng.close()\n</code></pre>"},{"location":"sessions/functions/","title":"Functions","text":"<p>Learning outcomes</p> <ul> <li>Use a for loop</li> <li>Write a function without an argument and without a return type</li> <li>Write a function that calls a function</li> <li>Write a function that requires an argument</li> <li>Write a function with a return value</li> </ul> For teachers <p>Teaching goals are:</p> <ul> <li>Learners have used a for loop</li> <li>Learners have written functions</li> </ul> <p>Lesson plan:</p> <ul> <li>5 mins: prior knowledge</li> <li>5 mins: presentation</li> <li>15 mins: challenge</li> <li>5 mins: feedback</li> </ul> <p>Prior:</p> <ul> <li>What are functions?</li> <li>Why use functions?</li> <li>Can you name some Python functions?</li> </ul>"},{"location":"sessions/functions/#overview","title":"Overview","text":"<p>Sometime you need to do a same multi-line calculation multiple times in your code. Instead of copy-pasting, one can use a so-called 'function' to bundle a calculation is something that can be reused.</p>"},{"location":"sessions/functions/#exercises","title":"Exercises","text":""},{"location":"sessions/functions/#exercise-1-using-a-for-loop","title":"Exercise 1: using a for loop","text":"<p>Read the following sections of How to Think Like a Computer Scientist: Learning with Python 3:</p> <ul> <li>3.2. Instances \u2014 a herd of turtles</li> <li>3.3. The for loop</li> <li>3.4. Flow of Execution of the for loop</li> <li>3.5. The loop simplifies our turtle program</li> </ul> <p>Then do exercise</p> <ul> <li>3.8.1</li> <li>3.8.5</li> </ul>"},{"location":"sessions/functions/#exercise-2-a-simple-function","title":"Exercise 2: a simple function","text":"<p>Read the following sections of How to Think Like a Computer Scientist: Learning with Python 3:</p> <ul> <li>4.1. Functions</li> </ul> <p>Then do exercise:</p> <ul> <li>4.9.1</li> </ul>"},{"location":"sessions/functions/#exercise-3-write-a-function-that-calls-a-function","title":"Exercise 3: write a function that calls a function","text":"<p>Read the following sections of How to Think Like a Computer Scientist: Learning with Python 3:</p> <ul> <li>4.2. Functions can call other functions</li> </ul> <p>Then do exercise:</p> <ul> <li>4.9.2</li> </ul>"},{"location":"sessions/functions/#exercise-3-write-a-function-that-requires-an-argument","title":"Exercise 3: write a function that requires an argument","text":"<p>Read the following sections of How to Think Like a Computer Scientist: Learning with Python 3:</p> <ul> <li>4.4. Functions that require arguments</li> </ul> <p>Then do exercise:</p> <ul> <li>4.9.3</li> </ul>"},{"location":"sessions/functions/#exercise-4-write-a-function-with-a-return-value","title":"Exercise 4: write a function with a return value","text":"<p>Read the following sections of How to Think Like a Computer Scientist: Learning with Python 3:</p> <ul> <li>4.5. Functions that return values</li> </ul> <p>Then do exercise:</p> <ul> <li>4.9.7</li> <li>4.9.8</li> </ul>"},{"location":"sessions/functions/#links","title":"Links","text":"<ul> <li>How to Think Like a Computer Scientist: Learning with Python 3</li> </ul>"},{"location":"sessions/graphics/","title":"Graphics","text":"<p>Learning outcomes</p> <ul> <li>Make a first scatter plot</li> <li>Rehearse running a script that uses an import</li> <li>Rehearse that graphics need X-forwarding</li> </ul> For teachers <p>Teaching goals are:</p> <ul> <li>Learners hear about matplotlib</li> <li>Learners may find out again that X-forwarding is important</li> <li>Learners again have gotten 'stuff to work'</li> </ul> <p>Lesson plan:</p> <ul> <li>5 mins: prior knowledge</li> <li>5 mins: presentation</li> <li>15 mins: challenge</li> <li>5 mins: feedback</li> </ul> <p>Prior:</p> <ul> <li>What is meant with a plotting library?</li> <li>What is meant with a plotting package/module?</li> <li>Can you name a Python plotting package?</li> </ul>"},{"location":"sessions/graphics/#overview","title":"Overview","text":"<p>Sometimes one wants to make a plot, such like a scatterplot or barchart. Matplotlib is a popular Python package to make plots. Here we experience how easy/hard it is to use Matplotlib on Rackham.</p>"},{"location":"sessions/graphics/#exercises","title":"Exercises","text":""},{"location":"sessions/graphics/#exercise-1-use-matplotlib-to-show-a-plot","title":"Exercise 1: Use matplotlib to show a plot","text":"<p>Read matplotlib's 'Pyplot tutorial'.</p> <p>Copy-paste the first script on that page to a script and get it to work. Do you expect this to be easy?</p>"},{"location":"sessions/hello_little_turtles/","title":"Hello, little turtles","text":"<p>Not happy about this</p> <p>I am unhappy about this session.</p> <p>Instead:</p> <ul> <li>Start from a remote desktop environment</li> <li>Ignore X forwarding</li> </ul> <p>Learning outcomes</p> <ul> <li>Practice using the documentation of your HPC cluster</li> <li>Practice using the Python book   How to Think Like a Computer Scientist: Learning with Python 3</li> <li>Have a first 'Get stuff to work' experience</li> <li>Rehearse creating a script</li> <li>Experience when importing a Python package gives an error</li> <li>Search for a module that needs to be loaded</li> <li>Import a Python package successfully</li> </ul> For teachers <p>Teaching goals are:</p> <ul> <li>Learners have observed the error when importing a Python package   without the needed module loaded</li> <li>Learners have searched through the modules of their HPC cluster</li> <li>Learners may find out that X-forwarding is important</li> <li>Learners have gotten 'stuff to work'</li> </ul> <p>Other goals are:</p> <ul> <li>Verify that learners indeed have learned how to login with X-forwarding.   Redirect to remote desktop environment as a solution</li> </ul> <p>Lesson plan:</p> <ul> <li>5 mins: prior knowledge</li> <li>5 mins: presentation</li> <li>25 mins: challenge</li> <li>5 mins: feedback</li> </ul> <p>Prior questions:</p> <ul> <li>What are features of the Python programming language?</li> <li>What are problems you may face when running someone else's Python code?</li> <li>Trick question: what is a module?</li> <li>Which problem do modules solve?</li> <li>What is a Python module/package?</li> <li>Which problem do Python modules/packages solve?</li> <li>What is X forwarding?</li> </ul>"},{"location":"sessions/hello_little_turtles/#overview","title":"Overview","text":"<p>Sometimes you need to get 'stuff to work', for example, code written by someone else. In this session, we practice this, going through the problems and errors that occur when you 'just want to run the stupid code'.</p> <pre><code>flowchart TD\n  running_a_script[[Goal: Running a script]]\n  load_modules[Loaded modules?]\n  use_x_forwarding[Use X forwarding?]\n  success[Success: exercise 3]\n  failure_1[Failure: exercise 1]\n  failure_2[Failure: exercise 2]\n  running_a_script --&gt; load_modules\n  load_modules --&gt; |yes!| use_x_forwarding\n\n  load_modules --&gt; |oops, forgot!| failure_1\n  use_x_forwarding --&gt; |oops, forgot!| failure_2\n  use_x_forwarding --&gt; |yes!| success</code></pre>"},{"location":"sessions/hello_little_turtles/#exercises","title":"Exercises","text":""},{"location":"sessions/hello_little_turtles/#exercise-1-run-without-packages","title":"Exercise 1: run without packages","text":"<p>Read the following sections of How to Think Like a Computer Scientist: Learning with Python 3:</p> <ul> <li>3.1. Our first turtle program</li> </ul> <p>Then:</p> <ul> <li>Log in to your favorite HPC cluster using SSH without X forwarding</li> </ul> Answer HPC Cluster Example SSH login command Alvis <code>ssh sven@alvis1.c3se.chalmers.se</code> Bianca <code>ssh sven@bianca.uppmax.uu.se</code> COSMOS <code>ssh sven@cosmos.lunarc.lu.se</code> Dardel <code>ssh -i ~/.ssh/id-ed25519-pdc svensv@dardel.pdc.kth.se</code> Kebnekaise <code>ssh sven@kebnekaise.hpc2n.umu.se</code> LUMI <code>ssh -i ~/.ssh/id_rsa_lumi svensson@lumi.csc.fi</code> Pelle <code>ssh pelle@rackham.uppmax.uu.se</code> Rackham <code>ssh sven@rackham.uppmax.uu.se</code> Tetralith <code>ssh x_svesv@tetralith.nsc.liu.se</code> <ul> <li> <p>Do not load a Python module: it is the point of this exercise   to see what happens if you forget to do so!</p> </li> <li> <p>Copy-paste the first script in that section to a script   called <code>my_turtle.py</code> on your favorite   HPC cluster.   Below is a copy of that script:</p> </li> </ul> <pre><code>import turtle             # Allows us to use turtles\nwn = turtle.Screen()      # Creates a playground for turtles\nalex = turtle.Turtle()    # Create a turtle, assign to alex\n\nalex.forward(50)          # Tell alex to move forward by 50 units\nalex.left(90)             # Tell alex to turn by 90 degrees\nalex.forward(30)          # Complete the second side of a rectangle\n\nwn.mainloop()             # Wait for user to close window\n</code></pre> <p>Do not call the script <code>turtle.py</code></p> <p>Do not call the script <code>turtle.py</code>. Feel encouraged to do so anyways and observe the error message :-)</p> <ul> <li>Run the script on your HPC cluster using <code>python</code> without loading any modules.   Does your HPC cluster have the <code>turtle</code> Python package installed   by default?</li> </ul> Answer HPC Cluster Has <code>turtle</code> Python package installed by default? Alvis . Bianca Yes COSMOS Yes Dardel No Kebnekaise No LUMI No Pelle Yes Rackham Yes Tetralith Yes <p>Here is the error:</p> Bianca <pre><code>[richel@sens2025560-bianca ~]$ python my_turtle.py \nTraceback (most recent call last):\n  File \"my_turtle.py\", line 2, in &lt;module&gt;\n    wn = turtle.Screen()      # Creates a playground for turtles\n  File \"/usr/lib64/python2.7/lib-tk/turtle.py\", line 3552, in Screen\n    Turtle._screen = _Screen()\n  File \"/usr/lib64/python2.7/lib-tk/turtle.py\", line 3568, in __init__\n    _Screen._root = self._root = _Root()\n  File \"/usr/lib64/python2.7/lib-tk/turtle.py\", line 458, in __init__\n    TK.Tk.__init__(self)\n  File \"/usr/lib64/python2.7/lib-tk/Tkinter.py\", line 1745, in __init__\n    self.tk = _tkinter.create(screenName, baseName, className, interactive, wantobjects, useTk, sync, use)\n_tkinter.TclError: no display name and no $DISPLAY environment variable\n</code></pre> COSMOSDardelKebnekaiseLUMIPelleRackhamTetralith <pre><code>[richel@cosmos2 ~]$ python my_turtle.py \nTraceback (most recent call last):\n  File \"/home/richel/my_turtle.py\", line 2, in &lt;module&gt;\n    wn = turtle.Screen()      # Creates a playground for turtles\n  File \"/usr/lib64/python3.9/turtle.py\", line 3664, in Screen\n    Turtle._screen = _Screen()\n  File \"/usr/lib64/python3.9/turtle.py\", line 3680, in __init__\n    _Screen._root = self._root = _Root()\n  File \"/usr/lib64/python3.9/turtle.py\", line 435, in __init__\n    TK.Tk.__init__(self)\n  File \"/usr/lib64/python3.9/tkinter/__init__.py\", line 2270, in __init__\n    self.tk = _tkinter.create(screenName, baseName, className, interactive, wantobjects, useTk, sync, use)\n_tkinter.TclError: no display name and no $DISPLAY environment variable\n</code></pre> <pre><code>richelbi@login1:~&gt; python my_turtle.py \nTraceback (most recent call last):\n  File \"my_turtle.py\", line 1, in &lt;module&gt;\n    import turtle             # Allows us to use turtles\nImportError: No module named turtle\n</code></pre> <pre><code>b-an01 [~]$ python my_turtle.py \nTraceback (most recent call last):\n  File \"my_turtle.py\", line 1, in &lt;module&gt;\n    import turtle             # Allows us to use turtles\n  File \"/usr/lib/python2.7/lib-tk/turtle.py\", line 107, in &lt;module&gt;\n    import Tkinter as TK\n  File \"/usr/lib/python2.7/lib-tk/Tkinter.py\", line 42, in &lt;module&gt;\n    raise ImportError, str(msg) + ', please install the python-tk package'\nImportError: No module named _tkinter, please install the python-tk package\n</code></pre> <pre><code>bilderbe@uan04:~&gt; python my_turtle.py \n-bash: python: command not found\n</code></pre> <pre><code>[richel@pelle2 ~]$ python my_turtle.py \nTraceback (most recent call last):\n  File \"/domus/h1/richel/my_turtle.py\", line 2, in &lt;module&gt;\n    wn = turtle.Screen()      # Creates a playground for turtles\n  File \"/usr/lib64/python3.9/turtle.py\", line 3664, in Screen\n    Turtle._screen = _Screen()\n  File \"/usr/lib64/python3.9/turtle.py\", line 3680, in __init__\n    _Screen._root = self._root = _Root()\n  File \"/usr/lib64/python3.9/turtle.py\", line 435, in __init__\n    TK.Tk.__init__(self)\n  File \"/usr/lib64/python3.9/tkinter/__init__.py\", line 2270, in __init__\n    self.tk = _tkinter.create(screenName, baseName, className, interactive, wantobjects, useTk, sync, use)\n_tkinter.TclError: no display name and no $DISPLAY environment variable\n</code></pre> <pre><code>[richel@rackham1 ~]$ python my_turtle.py \nTraceback (most recent call last):\n  File \"my_turtle.py\", line 2, in &lt;module&gt;\n    wn = turtle.Screen()      # Creates a playground for turtles\n  File \"/usr/lib64/python2.7/lib-tk/turtle.py\", line 3552, in Screen\n    Turtle._screen = _Screen()\n  File \"/usr/lib64/python2.7/lib-tk/turtle.py\", line 3568, in __init__\n    _Screen._root = self._root = _Root()\n  File \"/usr/lib64/python2.7/lib-tk/turtle.py\", line 458, in __init__\n    TK.Tk.__init__(self)\n  File \"/usr/lib64/python2.7/lib-tk/Tkinter.py\", line 1745, in __init__\n    self.tk = _tkinter.create(screenName, baseName, className, interactive, wantobjects, useTk, sync, use)\n_tkinter.TclError: no display name and no $DISPLAY environment variable\n</code></pre> <pre><code>[x_ricbi@tetralith3 ~]$ python my_turtle.py \nTraceback (most recent call last):\n  File \"/home/x_ricbi/my_turtle.py\", line 2, in &lt;module&gt;\n    wn = turtle.Screen()      # Creates a playground for turtles\n  File \"/usr/lib64/python3.9/turtle.py\", line 3664, in Screen\n    Turtle._screen = _Screen()\n  File \"/usr/lib64/python3.9/turtle.py\", line 3680, in __init__\n    _Screen._root = self._root = _Root()\n  File \"/usr/lib64/python3.9/turtle.py\", line 435, in __init__\n    TK.Tk.__init__(self)\n  File \"/usr/lib64/python3.9/tkinter/__init__.py\", line 2270, in __init__\n    self.tk = _tkinter.create(screenName, baseName, className, interactive, wantobjects, useTk, sync, use)\n_tkinter.TclError: no display name and no $DISPLAY environment variable\n</code></pre> For those that use MobaXterm that cannot get an error <p>It seems that for some MobaXterm users, the X-forwarding is always on, so you cannot get this error.</p> <p>To get the error: create a new terminal and login via <code>ssh</code> without the <code>-X</code></p> <ul> <li>Load the Python software module of the correct version</li> </ul> HPC Cluster Python version Alvis <code>3.12.3</code> Bianca <code>3.11.4</code> COSMOS <code>3.11.5</code> Dardel <code>3.12.3</code> Kebnekaise <code>3.11.3</code> LUMI <code>3.11.7</code> Pelle <code>3.13.1</code> Rackham <code>3.12.7</code> Tetralith <code>3.10.4</code> Reminder <p>See Exercise 3 of 'Using the Python interpreter'</p> <ul> <li>Run the script on your HPC cluster using <code>python</code>   (now: with the modules loaded).   What is the error message now?</li> </ul> Answer HPC Cluster Will <code>turtle</code> work with modules loaded? Alvis ? Bianca Never COSMOS Yes Dardel TODO Kebnekaise ? LUMI ? Pelle Yes Rackham Yes Tetralith Yes <p>Here is the error:</p> Bianca <pre><code>[richel@sens2025560-bianca ~]$ python my_turtle.py \nTraceback (most recent call last):\n  File \"my_turtle.py\", line 2, in &lt;module&gt;\n    wn = turtle.Screen()      # Creates a playground for turtles\n  File \"/usr/lib64/python2.7/lib-tk/turtle.py\", line 3552, in Screen\n    Turtle._screen = _Screen()\n  File \"/usr/lib64/python2.7/lib-tk/turtle.py\", line 3568, in __init__\n    _Screen._root = self._root = _Root()\n  File \"/usr/lib64/python2.7/lib-tk/turtle.py\", line 458, in __init__\n    TK.Tk.__init__(self)\n  File \"/usr/lib64/python2.7/lib-tk/Tkinter.py\", line 1745, in __init__\n    self.tk = _tkinter.create(screenName, baseName, className, interactive, wantobjects, useTk, sync, use)\n_tkinter.TclError: no display name and no $DISPLAY environment variable\n</code></pre> COSMOSDardelKebnekaiseLUMIPelleRackhamTetralith <pre><code>[richel@cosmos2 ~]$ python my_turtle.py \nTraceback (most recent call last):\n  File \"/home/richel/my_turtle.py\", line 2, in &lt;module&gt;\n    wn = turtle.Screen()      # Creates a playground for turtles\n  File \"/usr/lib64/python3.9/turtle.py\", line 3664, in Screen\n    Turtle._screen = _Screen()\n  File \"/usr/lib64/python3.9/turtle.py\", line 3680, in __init__\n    _Screen._root = self._root = _Root()\n  File \"/usr/lib64/python3.9/turtle.py\", line 435, in __init__\n    TK.Tk.__init__(self)\n  File \"/usr/lib64/python3.9/tkinter/__init__.py\", line 2270, in __init__\n    self.tk = _tkinter.create(screenName, baseName, className, interactive, wantobjects, useTk, sync, use)\n_tkinter.TclError: no display name and no $DISPLAY environment variable\n</code></pre> <pre><code>richelbi@login1:~&gt; python my_turtle.py \nTraceback (most recent call last):\n  File \"my_turtle.py\", line 1, in &lt;module&gt;\n    import turtle             # Allows us to use turtles\nImportError: No module named turtle\n</code></pre> <p>To fix:</p> <pre><code>richelbi@login1:~&gt; module load miniconda3\n\nLmod is automatically replacing \"cpeGNU/24.11\" with \"PrgEnv-gnu/8.6.0\".\n\n\nLmod is automatically replacing \"cce/18.0.1\" with \"gcc-native/12.3\".\n\n\nLmod is automatically replacing \"PrgEnv-cray/8.6.0\" with \"cpeGNU/24.11\".\n\n\nDue to MODULEPATH changes, the following have been reloaded:\n  1) cray-libsci/24.11.0     2) cray-mpich/8.1.31\n</code></pre> <p>However, this still fails:</p> <pre><code>richelbi@login1:~&gt; conda install turtle\n\nEnvironmentNotWritableError: The current user does not have write permissions to the target environment.\n  environment location: /pdc/software/24.11/eb/software/miniconda3/25.3.1-1-cpeGNU-24.11\n  uid: 3222772\n  gid: 3222772\n</code></pre> <p>TODO</p> <pre><code>b-an01 [~]$ python my_turtle.py \nTraceback (most recent call last):\n  File \"my_turtle.py\", line 1, in &lt;module&gt;\n    import turtle             # Allows us to use turtles\n  File \"/usr/lib/python2.7/lib-tk/turtle.py\", line 107, in &lt;module&gt;\n    import Tkinter as TK\n  File \"/usr/lib/python2.7/lib-tk/Tkinter.py\", line 42, in &lt;module&gt;\n    raise ImportError, str(msg) + ', please install the python-tk package'\nImportError: No module named _tkinter, please install the python-tk package\n</code></pre> <pre><code>bilderbe@uan04:~&gt; python my_turtle.py \n-bash: python: command not found\n</code></pre> <pre><code>[richel@pelle2 ~]$ python my_turtle.py \nTraceback (most recent call last):\n  File \"/domus/h1/richel/my_turtle.py\", line 2, in &lt;module&gt;\n    wn = turtle.Screen()      # Creates a playground for turtles\n  File \"/usr/lib64/python3.9/turtle.py\", line 3664, in Screen\n    Turtle._screen = _Screen()\n  File \"/usr/lib64/python3.9/turtle.py\", line 3680, in __init__\n    _Screen._root = self._root = _Root()\n  File \"/usr/lib64/python3.9/turtle.py\", line 435, in __init__\n    TK.Tk.__init__(self)\n  File \"/usr/lib64/python3.9/tkinter/__init__.py\", line 2270, in __init__\n    self.tk = _tkinter.create(screenName, baseName, className, interactive, wantobjects, useTk, sync, use)\n_tkinter.TclError: no display name and no $DISPLAY environment variable\n</code></pre> <pre><code>[richel@rackham2 ~]$ python my_little_turtle.py\nTraceback (most recent call last):\n  File \"/domus/h1/richel/my_little_turtle.py\", line 2, in &lt;module&gt;\n    wn = turtle.Screen()      # Creates a playground for turtles\n  File \"/sw/comp/python/3.10.8/rackham/lib/python3.10/turtle.py\", line 3664, in Screen\n    Turtle._screen = _Screen()\n  File \"/sw/comp/python/3.10.8/rackham/lib/python3.10/turtle.py\", line 3680, in __init__\n    _Screen._root = self._root = _Root()\n  File \"/sw/comp/python/3.10.8/rackham/lib/python3.10/turtle.py\", line 435, in __init__\n    TK.Tk.__init__(self)\n  File \"/sw/comp/python/3.10.8/rackham/lib/python3.10/tkinter/__init__.py\", line 2299, in __init__\n    self.tk = _tkinter.create(screenName, baseName, className, interactive, wantobjects, useTk, sync, use)\n_tkinter.TclError: no display name and no $DISPLAY environment variable\n[richel@rackham2 ~]$\n</code></pre> <pre><code>[x_ricbi@tetralith3 ~]$ python my_turtle.py \nTraceback (most recent call last):\n  File \"/home/x_ricbi/my_turtle.py\", line 2, in &lt;module&gt;\n    wn = turtle.Screen()      # Creates a playground for turtles\n  File \"/usr/lib64/python3.9/turtle.py\", line 3664, in Screen\n    Turtle._screen = _Screen()\n  File \"/usr/lib64/python3.9/turtle.py\", line 3680, in __init__\n    _Screen._root = self._root = _Root()\n  File \"/usr/lib64/python3.9/turtle.py\", line 435, in __init__\n    TK.Tk.__init__(self)\n  File \"/usr/lib64/python3.9/tkinter/__init__.py\", line 2270, in __init__\n    self.tk = _tkinter.create(screenName, baseName, className, interactive, wantobjects, useTk, sync, use)\n_tkinter.TclError: no display name and no $DISPLAY environment variable\n</code></pre> <p>The error is <code>no display name and no $DISPLAY environment variable</code>. In simpler terms, this can be read as 'Nothing to show graphics with'.</p> <p>The solution is to login to your HPC cluster with X forwarding enabled. For sensitive data HPC clusters, this means running a terminal within a remote desktop environment.</p>"},{"location":"sessions/hello_little_turtles/#exercise-3-running-a-first-program","title":"Exercise 3: Running a first program","text":"<p>Now we try to make this script work!</p> <p>Read:</p> <ul> <li>the UPPMAX documentation 'Loading Python packages'</li> <li>the UPPMAX documentation 'Modules'</li> </ul> <p>Now, try to get the script to work.</p> <p>When running the code, there should be a visible pop-up window. If not, re-read the UPPMAX documentation page 'Login to Rackham' and enable X-forwarding. If X-forwarding does not work, use the Rackham remote desktop environment.</p> Need more hints? <p>The exercise is about practicing to search for an UPPMAX module, hence giving away the answer makes this session useless.</p> <p>However, if you feel stuck too much, you can watch a video in which this exercise is done</p> <ul> <li>Log in to your HPC cluster using SSH with X forwarding. How does it look?   For sensitive data HPC clusters, use a remote desktop environment,   as X is disabled.</li> </ul> Answer <p>This is how to log in with X forwarding enabled:</p> HPC Cluster Python version Alvis <code>ssh -X sven@alvis1.c3se.chalmers.se</code> Bianca You cannot. Instead, start a terminal from a remote desktop COSMOS <code>ssh -X sven@cosmos.lunarc.lu.se</code> Dardel <code>ssh -X -i ~/.ssh/id-ed25519-pdc svensv@dardel.pdc.kth.se</code> Kebnekaise <code>ssh -X sven@kebnekaise.hpc2n.umu.se</code> LUMI <code>ssh -X -i ~/.ssh/id_rsa_lumi svensson@lumi.csc.fi</code> Pelle <code>ssh -X pelle@rackham.uppmax.uu.se</code> Rackham <code>ssh -X sven@rackham.uppmax.uu.se</code> Tetralith <code>ssh -X x_svesv@tetralith.nsc.liu.se</code> <p>It looks like this:</p> <p></p>"},{"location":"sessions/hello_little_turtles/#links","title":"Links","text":"<ul> <li>How to Think Like a Computer Scientist: Learning with Python 3</li> </ul>"},{"location":"sessions/introduction_basic_python/","title":"Overview","text":"<p>These sessions introduce the fundamentals of the Python programming language. You can develop in Python on an HPC cluster, or on your computer: both are equally fine.</p> <p>Content</p> <ul> <li>The course emphasises hands-on experience with Python in an HPC   environment. It focuses on the basics and can be taken by someone   without any prior Python experience.</li> <li>You will learn:<ul> <li>How to load and use different versions   of Python on our clusters</li> <li>How to create and run a Python script</li> <li>How to work with basic builtin data types</li> <li>How to use modules to load a Python package</li> <li>How to read from files</li> <li>How to write to files</li> <li>How to create a command line program that can take input arguments</li> <li>How to use control flow statements</li> <li>How to draw a plot (i.e. an x-y line plot)</li> <li>How to bundle code into reusable functions</li> </ul> </li> </ul> <pre><code>flowchart TD\n  python[[Python]]\n\n  user_input[User input]\n  file_io[File I/O]\n  command_line_arguments[Command-line arguments]\n  variables[Variables]\n  operators[Operators]\n  functions[Functions]\n  python_packages[Python packages]\n  graphics[Graphics]\n\n\n  python --&gt; |has| python_packages\n  python --&gt; |has| variables\n  python --&gt; |has| functions\n  python --&gt; |has| operators\n  functions --&gt; |use| variables\n  operators --&gt; |work on| variables\n  python_packages --&gt; |allow| graphics\n  python_packages --&gt; |allow to use| user_input\n  python_packages --&gt; |allow to do| file_io\n  python_packages --&gt; |allow to use| command_line_arguments</code></pre> <ul> <li>Variables, expressions and statements, variables</li> <li>Variables, expressions and statements, operators</li> <li>Variables, expressions and statements, user input &lt;! -- - Modules and Python packages need rewrite) --&gt;</li> <li>File IO</li> <li>Command line arguments &lt;! -- - Graphics need rewrite --&gt;</li> <li>Functions</li> </ul>"},{"location":"sessions/introduction_getting_it_to_run/","title":"Introduction 'Getting it to run'","text":"<p>This course day allows you to program in basic Python on an HPC cluster.</p> <p>Learning outcomes</p> <ul> <li>Learners have read what they will learn</li> <li>Learners can find how to download and extract the exercises</li> <li>Learners understand how this day is organized</li> </ul> For teachers: Lesson plan <p>Prior questions:</p> <ul> <li>What is Pyton?</li> <li>What are features of the Python language?</li> <li>In the term 'HPC cluster', what does 'cluster' mean?</li> <li>In the term 'HPC cluster', what does 'HPC' mean?</li> <li>What are features of HPC clusters?</li> </ul> Overview of these sessions as a concept map <pre><code>flowchart TD\n    python[[Python]]\n\n    %% Give a white background to all nodes, instead of a transparent one\n    classDef node fill:#fff,color:#000,stroke:#000\n\n    subgraph sub_programming_language[Programming language]\n      interpreted_language[Interpreted language]\n      programming_language[Programming language]\n      scripting_language[Scripting language]\n      interpreter[Interpreter]\n      scripts[Scripts]\n      text_files[Text files]\n    end\n    style sub_programming_language fill:#ccf,color:#000,stroke:#fcc\n\n    subgraph sub_programming_terms[Programming terms]\n      user_input[User input]\n      %% file_io[File I/O]\n      %% command_line_arguments[Command-line arguments]\n      variables[Variables]\n      operators[Operators]\n      %% functions[Functions]\n      python_packages[Python packages]\n      %% graphics[Graphics]\n    end \n    style sub_programming_terms fill:#cfc,color:#000,stroke:#fcc\n\n    subgraph sub_naiss[NAISS]\n      your_hpc_center[Your HPC center]\n      modules[software modules]\n      your_hpc_cluster[Your HPC cluster]\n      text_editors[Text editors]\n      %% x_forwarding[X-forwarding]\n      %% remote_desktop[Remote desktop]\n    end\n    style sub_naiss fill:#fcc,color:#000,stroke:#fcc\n\n    python --&gt; |is a| programming_language\n    python --&gt; |is a| interpreted_language\n    python --&gt; |is a| scripting_language\n\n    programming_language --&gt; |uses| text_files\n    interpreted_language --&gt; |has a| interpreter\n    scripting_language --&gt; |is|interpreted_language\n    scripting_language --&gt; |runs| scripts\n    scripts --&gt; |are| text_files\n    %% scripts --&gt; |can use| command_line_arguments\n\n    python --&gt; |has| python_packages\n    python --&gt; |has| variables\n    %%python --&gt; |has| functions\n    python --&gt; |has| operators\n    %%functions --&gt; |use| variables\n    operators --&gt; |work on| variables\n    %%python_packages --&gt; |allow| graphics\n    python_packages --&gt; |allow to use| user_input\n    %% python_packages --&gt; |allow to do| file_io\n    %% python_packages --&gt; |allow to use| command_line_arguments\n\n    your_hpc_center --&gt; |has| your_hpc_cluster\n    your_hpc_cluster --&gt; |have| modules\n    your_hpc_cluster --&gt; |have| text_editors\n    %% your_hpc_cluster --&gt; |allow| x_forwarding\n    %% your_hpc_cluster --&gt; |has| remote_desktop\n    modules --&gt; |allow the use of| python_packages\n    modules --&gt; |allow the use of| interpreter\n\n    text_editors --&gt; |work on|text_files\n    %%x_forwarding --&gt; |allows|graphics\n    %%remote_desktop --&gt; |allows|graphics\n\n\n    variables ~~~ your_hpc_center</code></pre>"},{"location":"sessions/introduction_getting_it_to_run/#why-is-this-course-important","title":"Why is this course important?","text":"<p>Python, according to the TIOBE index is one of the most used programming languages at this day.</p> <p>Running Python on an HPC cluster allows scientists to run their code that needs either (1) massive computation, (2) massive storage space, and/or (3) storage of sensitive data.</p> <p>This course allows you to do your analysis, in one of the most used programming languages at this day, using some of the most advanced hardware we have at this day.</p>"},{"location":"sessions/introduction_getting_it_to_run/#sessions","title":"Sessions","text":"<p>The sessions 'Getting it to run' allow you to run Python on an HPC cluster:</p> <ul> <li>Using the Python interpreter</li> <li>The way of the program</li> <li>Working with Python scripts</li> </ul> <p>The later sessions focus on learning Python.</p>"},{"location":"sessions/introduction_getting_it_to_run/#exercises","title":"Exercises","text":""},{"location":"sessions/introduction_getting_it_to_run/#exercise-1-add-your-hpc-cluster-to-your-name","title":"Exercise 1: add your HPC cluster to your name","text":"<p>Change your Zoom name, to include your HPC cluster and favorite programming language, e.g. make <code>Sven</code> into <code>Sven [Alvis]</code>.</p> <p>You can do so by right-click on the video of yourself, then click 'Rename' to change your Zoom name.</p>"},{"location":"sessions/introduction_getting_it_to_run/#exercise-2-the-learning-outcomes-of-today","title":"Exercise 2: the learning outcomes of today","text":"<p>The goal of this exercise is to find out what you will learn today.</p> <ul> <li>Go to this form   and fill it in</li> </ul> For teachers: what is in that form? <p>With this exercise, we'll discover what we'll learn today.</p> <p>Give you confidence levels of the following statements, using this scale:</p> <ul> <li>0: I don't know even what this is about ...?</li> <li>1: I have no confidence I can do this</li> <li>2: I have low confidence I can do this</li> <li>3: I have some confidence I can do this</li> <li>4: I have good confidence I can do this</li> <li>5: I absolutely can do this!</li> </ul> <p>Give you confidence levels of the following statements below:</p> <ul> <li>I am comfortable using the documentation of my HPC center</li> <li>I am comfortable using a Python book</li> <li>I am comfortable learning Python</li> <li>I can load a Python version on my HPC cluster</li> <li>I can describe what the Python interpreter is</li> <li>I can use a text editor on my HPC cluster</li> <li>I can create a Python script</li> <li>I can run a Python script</li> <li>In Python, I can create a variable</li> <li>In Python, I can use a variable</li> <li>I can convert a simple equation to Python code</li> <li>In Python, I can find and use the operator for exponentiation</li> <li>In Python, I know what the modulo operator is and when to use it</li> <li>I can convert a simple text question to Python code</li> </ul>"},{"location":"sessions/introduction_getting_it_to_run/#optional-exercise-3-where-is-what","title":"(optional) Exercise 3: where is what?","text":"<p>Explore the website of the course. Where you can you find the things below?</p> <ul> <li>The schedule</li> <li>Further learning</li> <li>The frequently asked questions</li> <li>Earlier evaluation results</li> </ul>"},{"location":"sessions/the_way_of_the_program/","title":"The Way Of The Program","text":"<p>Learning outcomes</p> <ul> <li>Practice using the documentation of your HPC cluster</li> <li>Practice using the Python book   How to Think Like a Computer Scientist: Learning with Python 3</li> <li>Get a first impression of what the Python programming language is</li> <li>Know the basics of what the Python interpreter is</li> <li>Get a first idea of what a program is</li> <li>Build up experience with the Python interpreter</li> <li>Use a text editor on your HPC cluster</li> <li>Create a Python script</li> <li>Run a Python script</li> </ul> For teachers <p>Teaching goals are:</p> <ul> <li>Learners have a general idea about what the Python programming language is</li> <li>Learners have used the phrase 'Python interpreter'</li> <li>Learners have a general idea about what a program is</li> <li>Learners have run code in the Python interpreter</li> </ul> <p>Other goals are:</p> <ul> <li>Verify that learners indeed have learned how to create a file</li> <li>Verify that learners indeed have learned how to use a text editor</li> </ul> <p>Lesson plan:</p> <ul> <li>5 mins: prior knowledge</li> <li>5 mins: presentation</li> <li>15 mins: challenge</li> <li>5 mins: feedback</li> </ul> <p>Prior questions:</p> <ul> <li>What is a script?</li> <li>Can you name a text editor?</li> </ul>"},{"location":"sessions/the_way_of_the_program/#why","title":"Why?","text":"<p>At the start of learning Python, there are many new terms. Using a book to learn these is a good start.</p> <p>What is Python? What is a programming language? What type of errors will I write when programming? How do I write code in Python?</p> <p>These fundamental questions are discussed and practiced in this session.</p>"},{"location":"sessions/the_way_of_the_program/#exercises","title":"Exercises","text":"Enjoy a video? <p>You can watch a video with solutions to these exercises</p>"},{"location":"sessions/the_way_of_the_program/#exercise-1-python-and-the-python-interpreter","title":"Exercise 1: Python and the Python interpreter","text":"<p>Read the following sections of How to Think Like a Computer Scientist: Learning with Python 3:</p> <ul> <li>1.1 The Python programming language</li> <li>1.2. What is a program?</li> <li>1.9. The first program</li> </ul> <p>Then in section 1.12, do exercises 1 up to and including 5. For your convenience, the questions are copy-pasted below:</p>"},{"location":"sessions/the_way_of_the_program/#exercise-12-question-1122","title":"Exercise 1.2: Question 1.12.2","text":"<p>Using the Python interpreter, type <code>1 + 2</code> and then hit return. Python evaluates this expression, displays the result, and then shows another prompt. <code>*</code> is the multiplication operator, and <code>**</code> is the exponentiation operator. Experiment by entering different expressions and recording what is displayed by the Python interpreter.</p> Answer <p>This is more about experimenting with the operators <code>+</code>, <code>*</code> and <code>**</code>. Here are some things to let the Python interpreter evaluate:</p> <pre><code>1+2\n1 + 2\n1*2\n2 * 3\n2**3\n</code></pre>"},{"location":"sessions/the_way_of_the_program/#exercise-13-question-1123","title":"Exercise 1.3: Question 1.12.3","text":"<p>Type <code>1 2</code> and then hit return. Python tries to evaluate the expression, but it can't because the expression is not syntactically legal. Instead, it shows the error message:</p> <pre><code>File \"&lt;interactive input&gt;\", line 1\n1 2\n  ^\nSyntaxError: invalid syntax\n</code></pre> <p>In many cases, Python indicates where the syntax error occurred, but it is not always right, and it doesn't give you much information about what is wrong.</p> <p>So, for the most part, the burden is on you to learn the syntax rules.</p> <p>In this case, Python is complaining because there is no operator between the numbers.</p> <p>See if you can find a few more examples of things that will produce error messages when you enter them at the Python prompt. Write down what you enter at the prompt and the last line of the error message that Python reports back to you.</p> Answer <p>This question is more about experimenting, armed with limited knowledge on <code>+</code>, <code>*</code>, <code>**</code> and <code>print</code>.</p> <p>Here are some of my favorites:</p> <pre><code>&gt;&gt;&gt;  1\n  File \"&lt;stdin&gt;\", line 1\n    1\nIndentationError: unexpected indent\n\n&gt;&gt;&gt; print 1\n  File \"&lt;stdin&gt;\", line 1\n    print 1\n    ^^^^^^^\nSyntaxError: Missing parentheses in call to 'print'. Did you mean print(...)?\n\n&gt;&gt;&gt; print 1 + 1\n  File \"&lt;stdin&gt;\", line 1\n    print 1 + 1\n    ^^^^^^^^^^^\nSyntaxError: Missing parentheses in call to 'print'. Did you mean print(...)?\n\n&gt;&gt;&gt; print(1) + print(1)\n1\n1\nTraceback (most recent call last):\n  File \"&lt;stdin&gt;\", line 1, in &lt;module&gt;\nTypeError: unsupported operand type(s) for +: 'NoneType' and 'NoneType'\n\n&gt;&gt;&gt; 1++\n  File \"&lt;stdin&gt;\", line 1\n    1++\n       ^\nSyntaxError: invalid syntax\n</code></pre>"},{"location":"sessions/the_way_of_the_program/#exercise-14-question-1124","title":"Exercise 1.4: Question 1.12.4","text":"<p>Type <code>print(\"hello\")</code>. Python executes this, which has the effect of printing the letters h-e-l-l-o. Notice that the quotation marks that you used to enclose the string are not part of the output. Now type \"hello\" and describe your result. Make notes of when you see the quotation marks and when you don\u2019t.</p> Answer <p>Here are the four combinations of using <code>print</code> yes/no and using single/double quotes:</p> <pre><code>&gt;&gt;&gt; print(\"Hello\")\nHello\n&gt;&gt;&gt; print('Hello')\nHello\n&gt;&gt;&gt; \"Hello\"\n'Hello'\n&gt;&gt;&gt; 'Hello'\n'Hello'\n</code></pre> <p>A correct conclusion is:</p> <ul> <li>When using <code>print</code>, any type of quotes is removed</li> <li>When not using <code>print</code>, the word is printed in single quotes</li> </ul>"},{"location":"sessions/the_way_of_the_program/#exercise-15-question-1125","title":"Exercise 1.5: Question 1.12.5","text":"<p>Type <code>cheese</code> without the quotation marks. The output will look something like this:</p> <pre><code>Traceback (most recent call last):\n  File \"&lt;interactive input&gt;\", line 1, in ?\nNameError: name 'cheese' is not defined\n</code></pre> <p>This is a run-time error; specifically, it is a <code>NameError</code>, and even more specifically, it is an error because the name <code>cheese</code> is not defined. If you don't know what that means yet, you will soon.</p> Answer <p>This is more of an explanation. Indeed:</p> <pre><code>&gt;&gt;&gt; cheese\nTraceback (most recent call last):\n  File \"&lt;stdin&gt;\", line 1, in &lt;module&gt;\nNameError: name 'cheese' is not defined\n</code></pre>"},{"location":"sessions/the_way_of_the_program/#exercise-2-running-a-python-script","title":"Exercise 2: Running a Python script","text":"<p>Here we continue with How to Think Like a Computer Scientist: Learning with Python 3 chapter 1. In section 1.12, we'll do exercise 6. For your convenience, the question is split into pieces and is copy-pasted below.</p>"},{"location":"sessions/the_way_of_the_program/#exercise-21-question-1126a","title":"Exercise 2.1: Question 1.12.6a","text":"<p>Type <code>6 + 4 * 9</code> at the Python prompt and hit enter. Record what happens.</p> Answer <pre><code>&gt;&gt;&gt; 6 + 4 * 9\n42\n</code></pre>"},{"location":"sessions/the_way_of_the_program/#exercise-22-text-editors","title":"Exercise 2.2: Text editors","text":"<p>Search your HPC cluster's documentation for a text editor and decide on which one to use. Pick the simplest one if you do not already know a text editor.</p> Answer HPC Cluster Documentation Alvis  None Bianca Documentation COSMOS  None Dardel  None Kebnekaise Documentation LUMI  None Rackham Documentation Tetralith Documentation <ul> <li> means that there is either no direct to the documentation   and/or the documentation present is incomplete.   You are encouraged   to contact your HPC center to help them help you better</li> </ul> <p>The simplest text editor is called <code>nano</code>.</p>"},{"location":"sessions/the_way_of_the_program/#exercise-23-question-1126b","title":"Exercise 2.3: Question 1.12.6b","text":"<p>Use <code>nano</code> (or your favorite text editor) to create a Python script with the following contents:</p> <pre><code>6 + 4 * 9\n</code></pre> <p>What happens when you run this script?</p> Answer <p>Creating a Python script <code>my_script.py</code> using <code>nano</code>:</p> <pre><code>nano my_script.py\n</code></pre> <p>The content of the file should be:</p> <pre><code>6 + 4 * 9\n</code></pre> <p>Running the Python script <code>my_script.py</code>:</p> <pre><code>python my_script.py\n</code></pre>"},{"location":"sessions/the_way_of_the_program/#exercise-24-question-1126c","title":"Exercise 2.4: Question 1.12.6c","text":"<p>Now change the script contents to:</p> <pre><code>print(6 + 4 * 9)\n</code></pre> <p>and run it again.</p> <p>What happened this time?</p> Answer <p>Modifying the Python script again:</p> <pre><code>nano my_script.py\n</code></pre> <p>The content of the file should be:</p> <pre><code>print(6 + 4 * 9)\n</code></pre> <p>Running the Python script <code>my_script.py</code>:</p> <pre><code>python my_script.py\n</code></pre> <p>Gives:</p> <pre><code>42\n</code></pre>"},{"location":"sessions/the_way_of_the_program/#exercise-25-recap","title":"Exercise 2.5: Recap","text":"<p>Here is the remaining text in the book, pasted here for you convenience:</p> <p>Whenever an expression is typed at the Python prompt, it is evaluated and the result is automatically shown on the line below (Like on your calculator, if you type this expression you'll get the result 42).</p> <p>A script is different, however. Evaluations of expressions are not automatically displayed, so it is necessary to use the <code>print</code> function to make the answer show up.</p> <p>It is hardly ever necessary to use the <code>print</code> function in immediate mode at the command prompt.</p>"},{"location":"sessions/using_the_python_interpreter/","title":"Using the Python interpreter","text":"<p>Learning outcomes</p> <ul> <li>Practice using the documentation of your HPC cluster</li> <li>To be able to login to your HPC cluster</li> <li>To be able to load Python</li> <li>To be able to run a minimal Python program</li> </ul> For teachers <p>Teaching goals are:</p> <ul> <li>Learners have used the documentation of their HPC cluster</li> <li>Learners have used the Python interpreter</li> <li>Learners have loaded Python</li> </ul> <p>Other goals are:</p> <ul> <li>Verify that learners indeed have learned how to login</li> <li>Verify that learners indeed have learned how to use the module system</li> </ul> <p>Prior and feedback question:</p> <ul> <li>On an HPC cluster, what are software modules?</li> <li>On an HPC cluster, which problem do software modules solve?</li> <li>On an HPC cluster, why don't we let users install all software themselves?</li> <li>What does it mean that Python is an interpreted language?</li> <li>What is an interpreter?</li> </ul> <p>Notes:</p> <ul> <li>For those that use Bianca, it may take some time to get a login node.   Encourage those to try Pelle while waiting</li> </ul>"},{"location":"sessions/using_the_python_interpreter/#why-software-modules-are-important","title":"Why software modules are important","text":"<p>Software modules allows users of any HPC cluster to activate their favorite software of any version. This helps to assure reproducible research.</p>"},{"location":"sessions/using_the_python_interpreter/#why-the-python-interpreter-is-important","title":"Why the Python interpreter is important","text":"<pre><code>flowchart TD\n  a_letter[A letter to do something]\n  employee[Employee]\n  something_done[Something is done]\n  a_letter --&gt; employee --&gt; something_done\n\n  code[Code] \n  interpreter[Interpreter]\n  machine_code[Machine code]\n  code --&gt; interpreter --&gt; machine_code</code></pre> <p>The Python interpreter is the program that lets your Python code do something. It is at the heart of using Python: without it, you cannot do Python programming.</p>"},{"location":"sessions/using_the_python_interpreter/#exercises","title":"Exercises","text":"Enjoy a video? <p>You can find a video with solutions to these exercises:</p> HPC Cluster Login method Videos Alvis SSH Video Bianca SSH Video COSMOS SSH Video Dardel SSH Video Kebnekaise SSH Video LUMI SSH Video Pelle SSH Video Rackham SSH Video Tetralith SSH Video <p>To develop code in Python on your HPC clusters, one needs to:</p> <ul> <li>Login to that HPC cluster, to be able to work on it</li> <li>Load the Python module, to be using the right Python interpreter and environment</li> <li>Use the Python interpreter, to run Python code</li> </ul> <p>Luckily, the documentation of your HPC center should allow you to do this by yourself!</p> <p>These exercises will ensure you are able to run a minimal Python program.</p> How difficult will this exercise be? <p>The difficulty of these exercises depends on your HPC cluster:</p> HPC cluster name Need VPN? Need SSH keys? Need 2FA? Documentation Difficulty Alvis Yes No No Minimal Medium Bianca Yes No Yes Excellent Medium COSMOS No No Yes Good Easy Dardel No Yes No Minimal Medium LUMI No Yes No Reasonable Medium Kebnekaise No No No Good Easy Pelle No No No Excellent Easy Rackham No No No Excellent Easy Tetralith No No Yes Good Easy"},{"location":"sessions/using_the_python_interpreter/#exercise-1-remember-a-zoom-room","title":"Exercise 1: remember a Zoom room","text":"<p>We will use breakout rooms, as this is best for learning. Ideally, each breakout room has 2 learners for the same HPC cluster. As it cannot be predicted how many learners show up per cluster, we do this dynamically.</p> <ul> <li>Remember a breakout room of your HPC cluster,   from the schedule below</li> </ul> HPC cluster name Main breakout room Bem2 and Vera Room 1 Bianca Room 2 COSMOS and Rackham Room 3 Dardel 1 Room 4 Dardel 2 Room 5 Tetralith 1 Room 6 Tetralith 2 Room 7 Tetralith 3 Room 8 Tetralith 4 Room 9 Tetralith 5 Room 10 Tetralith 6 Room 11 Tetralith 7 Room 12 Tetralith 8 Room 13 Tetralith 9 Room 14 Tetralith 10 Room 15 Tetralith 11 Room 16 <ul> <li>Go there</li> <li>Learners will be ruthlessly moved between rooms until all rooms have   2 or 3 people present</li> </ul>"},{"location":"sessions/using_the_python_interpreter/#exercise-2-login-to-your-hpc-cluster","title":"Exercise 2: login to your HPC cluster","text":"<p>Login to your favorite HPC cluster. This should be easy, as this is a prerequisite for this course.</p>"},{"location":"sessions/using_the_python_interpreter/#exercise-3-load-the-python-module","title":"Exercise 3: load the Python module","text":"<p>Go to the documentation of your HPC cluster and load a Python software module of the version indicated in the table below.</p> HPC Cluster Python version Alvis <code>3.12.3</code> Bianca <code>3.11.4</code> COSMOS <code>3.11.5</code> Dardel <code>3.12.3</code> Kebnekaise <code>3.11.3</code> LUMI <code>3.11.7</code> Pelle <code>3.13.1</code> Rackham <code>3.12.7</code> Tetralith <code>3.10.4</code> Answer <p>From the documentation of your center, searching for, for example, 'Python module', you will find information on how to load the Python module.</p> <p></p> HPC Cluster Documentation Solution Alvis Short documentation or long documentation <code>module load Python/3.12.3-GCCcore-13.3.0</code> Bianca Documentation <code>module load python/3.11.4</code> COSMOS Documentation <code>module load GCCcore/13.2.0 Python/3.11.5</code> Dardel Documentation and more documentation <code>module load PDC python/3.12.3</code> Kebnekaise Documentation <code>module load GCC/12.3.0 Python/3.11.3</code> LUMI Documentation <code>module load cray-python/3.11.7</code> Pelle Documentation <code>module load Python/3.13.1-GCCcore-14.2.0</code> Rackham Documentation <code>module load python/3.12.7</code> Tetralith Documentation <code>module load Python/3.10.4-env-hpc2-gcc-2022a-eb</code> <ul> <li> means that the documentation does not clearly answer   this question.   You may find that you can piece it together easily enough or   you may find that you cannot.   You are encouraged   to contact your HPC center to help them help you better</li> </ul>"},{"location":"sessions/using_the_python_interpreter/#exercise-4-start-the-python-interpreter","title":"Exercise 4: start the Python interpreter","text":"<p>Go to the documentation of your HPC cluster and start the Python interpreter.</p> Answer <p>From the documentation of your center, searching for, for example, 'Python' or 'Python interpreter', you may find information on how to start the Python interpreter.</p> <p></p> HPC Cluster Documentation Solution Alvis <code>python</code> Bianca Documentation <code>python</code> COSMOS <code>python</code> Dardel Documentation <code>python</code> Kebnekaise <code>python</code> LUMI Documentation <code>python</code> Pelle Documentation <code>python</code> Rackham Documentation <code>python</code> Tetralith Documentation <code>python</code> <ul> <li> for this specific question means that the documentation does   not answer this (or the answer is hiding in more complicated examples).   You may find this an acceptable omission or you may not.   You are encouraged   to contact your HPC center to help them help you better</li> </ul> Cannot get this to work? <p>If there is no time to get this fixed during the course, you can also use Python on your local computer.</p>"},{"location":"sessions/using_the_python_interpreter/#exercise-5-run-a-hello-world-program","title":"Exercise 5: run a 'Hello world' program","text":"<p>Copy-paste the following code to the Python interpreter:</p> <pre><code>print('Hello, world!')\n</code></pre> <p>Press enter.</p> <p>How does that look like?</p> Answer <p>Your output will look similar to this:</p> <pre><code>$ python\nPython 3.12.3 (main, Nov  6 2024, 18:32:19) [GCC 13.2.0] on linux\nType \"help\", \"copyright\", \"credits\" or \"license\" for more information.\n&gt;&gt;&gt; print('Hello, world!')\nHello, world!\n&gt;&gt;&gt; \n</code></pre> <p>Congratulations, you've just run a 'Hello world' program </p>"},{"location":"sessions/variables_expressions_and_statements_1/","title":"Variables, expressions and statements: variables","text":"<p>Learning outcomes</p> <ul> <li>Practice using the Python book   How to Think Like a Computer Scientist: Learning with Python 3</li> <li>Get the type of an object</li> <li>Create a variable</li> <li>Use a variable</li> <li>Practice converting an equation to Python code</li> </ul> For teachers <p>Teaching goals are:</p> <ul> <li>Learners have worked with variables</li> <li>Learners understand the purpose of variables</li> <li>Learners have obtained the data type of a variable</li> <li>Learners have heard about what a data type is</li> <li>Learners have practiced converting an equation and a text question to Python</li> </ul> <p>Lesson plan:</p> <p>Exercises:</p> <ul> <li>5 mins: prior knowledge</li> <li>5 mins: presentation</li> <li>15 mins: challenge</li> <li>5 mins: feedback</li> </ul> <p>Prior questions:</p> <ul> <li>What is a data type?</li> <li>Can you name a Python data type?</li> <li>What is an object?</li> <li>What is a variable?</li> <li>What are the rules for the name of a variable?</li> <li>What are good practices for the name of a variable?</li> <li>What is an operator?</li> <li>Can you name an operator?</li> </ul>"},{"location":"sessions/variables_expressions_and_statements_1/#overview","title":"Overview","text":"<p>In any non-trivial calculation, we want to let our computer remember things, such as the content of a data file or the parameters/settings we use in our program. Variables allows one to make a computer store ('remember') information. Here we use our first simple variables.</p> <p>Also we practice converting an equation and a mathematical problem to Python code. We will discover the helpful modulo operator.</p>"},{"location":"sessions/variables_expressions_and_statements_1/#exercises","title":"Exercises","text":""},{"location":"sessions/variables_expressions_and_statements_1/#exercise-1-working-with-variables","title":"Exercise 1: working with variables","text":"<p>Read the following sections of How to Think Like a Computer Scientist: Learning with Python 3:</p> <ul> <li>2.1. Values and data types</li> <li>2.2. Variables</li> <li>2.3. Variable names and keywords</li> </ul> <p>Then in section 2.14, do exercises 1 to and including 4.</p> <p>2.14.1</p> <p>Take the sentence: 'All work and no play makes Jack a dull boy'. Store each word in a separate variable, then print out the sentence on one line using print.</p> Answer <pre><code>a = 'All'\nb = 'work'\nc = 'and'\nd = 'no'\ne = 'play'\nf = 'makes'\ng = 'Jack'\nh = 'a'\ni = 'dull'\nj = 'boy'\nprint(a, b, c, d, e, f, g, h, i, j)    \n</code></pre> <p>2.14.2</p> <p>Add parenthesis to the expression <code>6 * 1 - 2</code> to change its value from 4 to -6.</p> Answer <pre><code>6 * (1 - 2)\n</code></pre> <p>2.14.3</p> <p>Place a comment before a line of code in a script that previously worked, and record what happens when you rerun the program.</p> Answer <p>I use this code as a starting point:</p> <pre><code>a = 'All'\nb = 'work'\nc = 'and'\nd = 'no'\ne = 'play'\nf = 'makes'\ng = 'Jack'\nh = 'a'\ni = 'dull'\nj = 'boy'\nprint(a, b, c, d, e, f, g, h, i, j)    \n</code></pre> <p>Commenting out the first line:</p> <pre><code>    print(a, b, c, d, e, f, g, h, i, j)\n          ^\nNameError: name 'a' is not defined\n</code></pre> <p>Commenting out the last line results in no sentence being printed.</p> <p>2.14.4</p> <p>Start the Python interpreter and enter bruce + 4 at the prompt. This will give you an error:</p> <pre><code>NameError: name 'bruce' is not defined\n</code></pre> <p>Assign a value to <code>bruce</code> so that <code>bruce + 4</code> evaluates to 10.</p> Answer <p>Here is a solution:</p> <pre><code>bruce = 6\nprint(bruce + 4)\n</code></pre>"},{"location":"sessions/variables_expressions_and_statements_2/","title":"Variables, expressions and statements: operators","text":"<p>Learning outcomes</p> <ul> <li>Practice using the Python book   How to Think Like a Computer Scientist: Learning with Python 3</li> <li>Get the type of an object</li> <li>Create a variable</li> <li>Use a variable</li> <li>Practice converting an equation to Python code</li> <li>Find and use the operator for exponentiation</li> <li>Practice the modulo operator</li> <li>Practice converting a simple text question to Python code</li> </ul> For teachers <p>Teaching goals are:</p> <ul> <li>Learners have worked with variables</li> <li>Learners understand the purpose of variables</li> <li>Learners have obtained the data type of a variable</li> <li>Learners have heard about what a data type is</li> <li>Learners have practiced converting an equation and a text question to Python</li> <li>Learners have read about operators</li> <li>Learners have worked with the modulo operator</li> </ul> <p>Lesson plan:</p> <p>Exercises:</p> <ul> <li>5 mins: prior knowledge</li> <li>5 mins: presentation</li> <li>15 mins: challenge</li> <li>5 mins: feedback</li> </ul> <p>Prior questions:</p> <ul> <li>What is an operator?</li> <li>If I ask you: 'What time is it 10 hours later,   what is the calculation you do in your head?'</li> <li>What is the modulo operator?</li> </ul>"},{"location":"sessions/variables_expressions_and_statements_2/#overview","title":"Overview","text":"<p>In any non-trivial calculation, we want to let our computer remember things, such as the content of a data file or the parameters/settings we use in our program. Variables allows one to make a computer store ('remember') information. Here we use our first simple variables.</p> <p>Also we practice converting an equation and a mathematical problem to Python code. We will discover the helpful modulo operator.</p>"},{"location":"sessions/variables_expressions_and_statements_2/#exercises","title":"Exercises","text":""},{"location":"sessions/variables_expressions_and_statements_2/#exercise-1-an-equation-with-exponentiation","title":"Exercise 1: an equation with exponentiation","text":"<p>Read the following sections of How to Think Like a Computer Scientist: Learning with Python 3:</p> <ul> <li>2.6. Operators and operands</li> </ul> <p>Then in section 2.14, do exercise 5 except for asking for input: use a hardcoded value as input, for example:</p> <pre><code>t = 3.14\n</code></pre> <p>2.14.5</p> <p>The formula for computing the final amount if one is earning compound interest is given on Wikipedia as</p> <p></p> <p>Write a Python script that assigns the principal amount of $<code>10000</code> to variable <code>P</code>, assign to <code>n</code> the value <code>12</code>, and assign to <code>r</code> the interest rate of 8%. Set the value of <code>t</code> to any positive value. Calculate and print the final amount after <code>t</code> years.</p> Answer <p>Here is a possible implementation:</p> <pre><code>p = 10000 # principal amount, in dollar\nr = 1.08 # yearly anual interest rate\nn = 12 # monthly compounding\nt = 3.14 # number of years\na = p * ((1 + (r/n)) ** (n * t))\nprint(a)\n</code></pre> <p>Note that <code>p</code> (and not <code>P</code>) was used, as this follows the PEP 8 Python coding standard.</p> <p>Additionally, to make sure the equation is calculated correctly, plenty of parentheses were used.</p>"},{"location":"sessions/variables_expressions_and_statements_2/#exercise-2-the-modulo-operator","title":"Exercise 2: the modulo operator","text":"<p>Read the following sections of How to Think Like a Computer Scientist: Learning with Python 3:</p> <ul> <li>2.8. Order of operations</li> <li>2.12. The modulus operator</li> </ul> <p>Then in section 2.14, do exercises 6 and 7.</p> <p>2.14.6</p> <p>Evaluate the following numerical expressions in your head, then use the Python interpreter to check your results:</p> <pre><code>&gt;&gt;&gt; 5 % 2\n&gt;&gt;&gt; 9 % 5\n&gt;&gt;&gt; 15 % 12\n&gt;&gt;&gt; 12 % 15\n&gt;&gt;&gt; 6 % 6\n&gt;&gt;&gt; 0 % 7\n&gt;&gt;&gt; 7 % 0\n</code></pre> <p>What happened with the last example? Why? If you were able to correctly anticipate the computer\u2019s response in all but the last one, it is time to move on. If not, take time now to make up examples of your own. Explore the modulus operator until you are confident you understand how it works.</p> Answer <pre><code>&gt;&gt;&gt; 5 % 2\n1\n&gt;&gt;&gt; 9 % 5\n4\n&gt;&gt;&gt; 15 % 12\n3\n&gt;&gt;&gt; 12 % 15\n12\n&gt;&gt;&gt; 6 % 6\n0\n&gt;&gt;&gt; 0 % 7\n0\n&gt;&gt;&gt; 7 % 0\nTraceback (most recent call last):\n  File \"&lt;stdin&gt;\", line 1, in &lt;module&gt;\nZeroDivisionError: integer modulo by zero\n&gt;&gt;&gt; \n</code></pre> <p>The last error is the result from a division by zero: <code>7 % 0</code> means: 'calculate the remainder after dividing seven by zero'. One cannot divide a number by zero.</p> <p>2.14.7</p> <p>You look at the clock and it is exactly 2 pm. You set an alarm to go off in 51 hours. At what time does the alarm go off? (Hint: you could count on your fingers, but this is not what we\u2019re after. If you are tempted to count on your fingers, change the 51 to 5100.)</p> Answer <p>Here is a possible implementation:</p> <pre><code>t_now = 14 # 2 pm\nt_future = (t_now + 51) % 24\nprint(t_future)\n</code></pre> <p>The result is <code>17</code>, i.e. 5 pm.</p>"},{"location":"sessions/variables_expressions_and_statements_3/","title":"Variables, expressions and statements: user input","text":"<p>Learning outcomes</p> <ul> <li>Practice using the Python book   How to Think Like a Computer Scientist: Learning with Python 3</li> <li>Get the type of an object</li> <li>Create a variable</li> <li>Use a variable</li> <li>Practice converting an equation to Python code</li> <li>Find and use the operator for exponentiation</li> <li>Practice the modulo operator</li> <li>Practice converting a simple text question to Python code</li> <li>Learn how to ask a user for input</li> <li>Use input in a calculation</li> </ul> For teachers <p>Teaching goals are:</p> <ul> <li>Learners have worked with variables</li> <li>Learners understand the purpose of variables</li> <li>Learners have obtained the data type of a variable</li> <li>Learners have heard about what a data type is</li> <li>Learners have practiced converting an equation and a text question to Python</li> <li>Learners have read about operators</li> <li>Learners have worked with the modulo operator</li> <li>Learners have written code that asked for user input</li> </ul> <p>Lesson plan:</p> <ul> <li>5 mins: prior knowledge</li> <li>5 mins: presentation</li> <li>15 mins: challenge</li> <li>5 mins: feedback</li> </ul> <p>Prior questions:</p> <ul> <li>What do we mean with user input?</li> <li>In which ways can we get user input?</li> <li>Why would you want to use user input in your program?</li> </ul>"},{"location":"sessions/variables_expressions_and_statements_3/#overview","title":"Overview","text":"<p>In any non-trivial calculation, we want to let our computer remember things, such as the content of a data file or the parameters/settings we use in our program. Variables allows one to make a computer store ('remember') information. Here we use our first simple variables.</p> <p>Also we practice converting an equation and a mathematical problem to Python code. We will discover the helpful modulo operator.</p>"},{"location":"sessions/variables_expressions_and_statements_3/#exercises","title":"Exercises","text":""},{"location":"sessions/variables_expressions_and_statements_3/#exercise-1-input","title":"Exercise 1: input","text":"<p>Read the following section of How to Think Like a Computer Scientist: Learning with Python 3:</p> <ul> <li><code>2.10. Input</code></li> </ul> <p>Then in section 2.14, do exercise 8.</p> <p>2.14.8</p> <p>Write a Python program to solve the general version of the above problem. Ask the user for the time now (in hours), and ask for the number of hours to wait. Your program should output what the time will be on the clock when the alarm goes off.</p> Answer <p>Here is a possible implementation:</p> <pre><code>t_now = int(input(\"Enter the current hour\"))\nn_hours = int(input(\"Enter the number of hours\"))\nt_future = (t_now + n_hours) % 24\nprint(\"Time after that number of hours:\")\nprint(t_future)\n</code></pre>"},{"location":"sessions/working_with_python_scripts/","title":"Working with Python scripts","text":"<p>Learning outcomes</p> <ul> <li>Practice using the documentation of your HPC cluster</li> <li>To be able to create a Python script</li> <li>To be able to run a Python script</li> </ul> For teachers <p>Teaching goals are:</p> <ul> <li>Learners have practiced using the documentation of their HPC cluster</li> <li>Learners have created a Python script</li> <li>Learners have run a Python script</li> </ul> <p>Other goals are:</p> <ul> <li>Verify that learners indeed have learned how to create a file</li> <li>Verify that learners indeed have learned how to use a text editor</li> </ul> <p>Lesson plan:</p> <ul> <li>5 mins: prior knowledge</li> <li>5 mins: presentation</li> <li>15 mins: challenge</li> <li>5 mins: feedback</li> </ul> <p>Prior questions:</p> <ul> <li>Why would you want to use a script?</li> <li>In which languages can one write a script?</li> <li>How does one run a script?</li> </ul>"},{"location":"sessions/working_with_python_scripts/#why","title":"Why?","text":"<p>You have multiple lines of code you want a computer to run. Instead of copy-pasting these lines individually to the interpreter, one can use a script.</p> <p>To run code, we use text files that are run as if each line was typed in into the Python interpreter. Such text files that run (interpreted) code are called 'scripts'.</p> <p>In this session, we practice to create and run some simple Python scripts, without new theory.</p>"},{"location":"sessions/working_with_python_scripts/#exercises","title":"Exercises","text":"<p>This is a partial repeat of the previous session, but with a different focus.</p> <p>The goal is to practice the fundamental skills of creating and running a script.</p>"},{"location":"sessions/working_with_python_scripts/#exercise-1-create-a-python-script","title":"Exercise 1: create a Python script","text":"<p>Go to the documentation of your HPC cluster, then answer the questions below. If you cannot find any helpful information, use the UPPMAX documentation about <code>nano</code></p> <ul> <li>On your HPC cluster, create a file called <code>hello_world.py</code>,   using a text editor or Linux commands</li> </ul> Answer <p>Creating a Python script <code>hello_world.py</code> using <code>nano</code>:</p> <pre><code>nano hello_world.py\n</code></pre> <ul> <li>Copy-paste the following content into the script:</li> </ul> <pre><code>print('Hello, world!')\n</code></pre> Answer <p>To paste into a terminal, use <code>CTRL + SHIFT + V</code> (i.e. add <code>SHIFT</code>).</p> <ul> <li>Save the script</li> </ul> Answer <p>In <code>nano</code>, you can do so with <code>CTRL + O</code></p> <ul> <li>Close the text editor</li> </ul> Answer <p>In <code>nano</code>, you can do so with <code>CTRL + X</code></p> <ul> <li>Verify that the script has its contents saved</li> </ul> Answer <p>One way to do so, is to use <code>nano</code> to open the file again:</p> <pre><code>nano hello_world.py\n</code></pre>"},{"location":"sessions/working_with_python_scripts/#exercise-2-run-a-python-script","title":"Exercise 2: run a Python script","text":"<p>Go to the documentation of your HPC cluster, then answer the questions below. If you cannot find any helpful information, use the UPPMAX documentation about how to run a Python script.</p> <ul> <li>Run the Python script you just created</li> </ul> Answer <p>You can run this Python script in the shell by:</p> <pre><code>python hello_world.py\n</code></pre>"}]}